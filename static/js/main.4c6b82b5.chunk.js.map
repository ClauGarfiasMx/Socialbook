{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Button/index.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Landing/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","emailVerified","providerData","db","doc","concat","users","collection","app","initializeApp","fieldValue","firestore","FieldValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","Button","className","extraClassName","onClick","action","name","_ref","components_Button","ADMIN","NavigationAuth","react_router_dom","to","ROUTES","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","FormSignUp","styled","form","_templateObject","vertical","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","set","merge","console","log","catch","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Fragment","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInLink","SignInForm","SignInPage","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","Landing","SignIn_SignInLink","window","location","href","Firebase_context","version","PasswordChangeForm","PasswordChange","UserList","loading","unsubscribe","onSnapshot","querySnapshot","docs","map","e","usersincome","userID","id","userData","pathname","UserItem","onSendPasswordResetEmail","match","params","react_router","exact","path","component","H1","h1","App_templateObject","components_Navigation","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6NAIeA,EAFSC,IAAMC,cAAc,yCCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIlCR,6BCNTW,eAAiB,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,YAAaF,6CACbG,UAAWH,sBACXI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,iBCTMO,EDab,SAAAA,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAQdE,iCAAmC,SAACC,EAAOC,GAAR,OACjCL,EAAKM,KAAKC,+BAA+BH,EAAOC,IATpCJ,KAWdO,6BAA+B,SAACJ,EAAOC,GAAR,OAC7BL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAZhCJ,KAcdS,UAAY,kBAAMV,EAAKM,KAAKK,WAddV,KAgBdW,gBAAkB,SAAAR,GAAK,OAAIJ,EAAKM,KAAKO,uBAAuBT,IAhB9CH,KAkBda,iBAAmB,SAAAT,GAAQ,OAAIL,EAAKM,KAAKS,YAAYC,eAAeX,IAlBtDJ,KAwBdgB,mBAAqB,SAACC,EAAMC,GAAP,OACnBnB,EAAKM,KAAKc,mBAAmB,SAAAC,GACvBA,EAEFrB,EAAKsB,KAAKD,EAASE,KAChBC,MACAC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,OAInBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjBR,EAAQjC,OAAA0C,EAAA,EAAA1C,CAAA,CACNmC,IAAKF,EAASE,IACdnB,MAAOiB,EAASjB,MAChB2B,cAAeV,EAASU,cACxBC,aAAcX,EAASW,cACpBL,GAGLT,EAAKG,KAGTF,OAnDQlB,KAwDdqB,KAAO,SAAAC,GAAG,OAAIvB,EAAKiC,GAAGC,IAAR,SAAAC,OAAqBZ,KAxDrBtB,KAyDdmC,MAAQ,kBAAMpC,EAAKiC,GAAGI,WAAW,UAxD/BC,IAAIC,cAAcjD,GAClBW,KAAKuC,WAAaF,IAAIG,UAAUC,WAEhCzC,KAAKK,KAAOgC,IAAIhC,OAChBL,KAAKgC,GAAKK,IAAIG,aEuBHE,EAtCY,SAAA9D,GAAa,IAChC+D,EADgC,SAAAC,GAEpC,SAAAD,EAAY9D,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2C,IACjB5C,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAwD,GAAAI,KAAA/C,KAAMnB,KACDmE,MAAQ,CACX5B,SAAU6B,KAAKC,MAAMC,aAAaC,QAAQ,cAH3BrD,EAFiB,OAAAZ,OAAAkE,EAAA,EAAAlE,CAAAwD,EAAAC,GAAAzD,OAAAmE,EAAA,EAAAnE,CAAAwD,EAAA,EAAAY,IAAA,oBAAAC,MAAA,WAYhB,IAAAC,EAAAzD,KAClBA,KAAK0D,SAAW1D,KAAKnB,MAAMK,SAAS8B,mBAClC,SAAAI,GACE+B,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUxC,IAChDqC,EAAKI,SAAS,CAAEzC,cAElB,WACE+B,aAAaW,WAAW,YACxBL,EAAKI,SAAS,CAAEzC,SAAU,WApBI,CAAAmC,IAAA,uBAAAC,MAAA,WA0BlCxD,KAAK0D,aA1B6B,CAAAH,IAAA,SAAAC,MAAA,WA6BlC,OACE1E,EAAAC,EAAAC,cAAC+E,EAAgBC,SAAjB,CAA0BR,MAAOxD,KAAKgD,MAAM5B,UAC1CtC,EAAAC,EAAAC,cAACJ,EAAcoB,KAAKnB,YA/BU8D,EAAA,CACLnE,IAAMI,WAmCvC,OAAOD,EAAagE,YCtCTsB,EAAO,QC6CLC,EAxCY,SAAAC,GAAS,OAAI,SAAAvF,GAAa,IAC7CwF,EAD6C,SAAAxB,GAAA,SAAAwB,IAAA,OAAAjF,OAAAc,EAAA,EAAAd,CAAAa,KAAAoE,GAAAjF,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAiF,GAAAC,MAAArE,KAAAsE,YAAA,OAAAnF,OAAAkE,EAAA,EAAAlE,CAAAiF,EAAAxB,GAAAzD,OAAAmE,EAAA,EAAAnE,CAAAiF,EAAA,EAAAb,IAAA,oBAAAC,MAAA,WAM7B,IAAAzD,EAAAC,KAClBA,KAAK0D,SAAW1D,KAAKnB,MAAMK,SAAS8B,mBAClC,SAAAI,GAEO+C,EAAU/C,IACbrB,EAAKlB,MAAM0F,QAAQC,KDjBR,YCoBf,kBAAMzE,EAAKlB,MAAM0F,QAAQC,KDpBV,eCM8B,CAAAjB,IAAA,uBAAAC,MAAA,WAmB/CxD,KAAK0D,aAnB0C,CAAAH,IAAA,SAAAC,MAAA,WAsBxC,IAAAC,EAAAzD,KACP,OAEElB,EAAAC,EAAAC,cAAC+E,EAAgB9E,SAAjB,KACG,SAAAmC,GAAQ,OAEP+C,EAAU/C,GAAYtC,EAAAC,EAAAC,cAACJ,EAAc6E,EAAK5E,OAAY,WA5BbuF,EAAA,CACnB5F,IAAMI,WAiCtC,OAAO6F,YACLC,IACA/F,EAFK8F,CAGLL,KC9BWO,EAbA,SAAA9F,GACb,OACEC,EAAAC,EAAAC,cAAA,UACE4F,UAAS,yBAAA1C,OACPrD,EAAMgG,eAAiBhG,EAAMgG,eAAiB,IAEhDC,QAASjG,EAAMkG,QAEdlG,EAAMmG,OCFErG,IAJO,SAAAsG,GAAA,IAAG/F,EAAH+F,EAAG/F,SAAH,OACpBJ,EAAAC,EAAAC,cAACkG,EAAD,CAAQF,KAAK,mBAAgBD,OAAQ7F,EAASuB,cCLnC0E,EAAQ,QCgBfC,EAAiB,SAAAH,GAAA,IAAG7D,EAAH6D,EAAG7D,SAAH,OACrBtC,EAAAC,EAAAC,cAAA,UAIEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GAAIC,GAAV,SAEFzG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GLrBW,YKqBjB,gBAEClE,EAASQ,MAAM4D,IAChB1G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GLvBO,UKuBb,UAGJxG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyG,EAAD,SAKAC,EAAoB,kBACxB5G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GLzCW,KKyCjB,eAEFxG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GL1CW,WK0CjB,sBAEFxG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GL9CW,WK8CjB,mBAKSK,EA5CI,kBACjB7G,EAAAC,EAAAC,cAAC+E,EAAgB9E,SAAjB,KACG,SAAAmC,GAAQ,OACPA,EAAWtC,EAAAC,EAAAC,cAAC4G,EAAD,CAAgBxE,SAAUA,IAAetC,EAAAC,EAAAC,cAAC6G,EAAD,ieCF1D,IAAMC,EAAaC,IAAOC,KAAVC,IAIZ,SAAApH,GAAK,OAAIA,EAAMqH,UAAY,2BAIvB,SAAArH,GAAK,OAAKA,EAAMqH,SAAW,aAAe,gBA4B5CC,EAAgB,CACpBC,SAAU,GACVjG,MAAO,GACPkG,YAAa,GACbC,YAAa,GACbC,SAAS,EACTC,MAAO,MAIHC,cACJ,SAAAA,EAAY5H,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAyG,IACjB1G,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAsH,GAAA1D,KAAA/C,KAAMnB,KAIR6H,SAAW,SAAAC,GAAS,IAAAC,EACgC7G,EAAKiD,MAA/CoD,EADUQ,EACVR,SAAUjG,EADAyG,EACAzG,MAAOkG,EADPO,EACOP,YAAaE,EADpBK,EACoBL,QAChC3E,EAAQ,GACV2E,IACF3E,EAAM4D,GAAeA,GAEvBzF,EAAKlB,MAAMK,SACRgB,iCAAiCC,EAAOkG,GACxC7E,KAAK,SAAAJ,GAEJ,OAAOrB,EAAKlB,MAAMK,SAASmC,KAAKD,EAASC,KAAKC,KAAKuF,IACjD,CACET,WACAjG,QACAyB,SAEF,CAAEkF,OAAO,MAGZtF,KAAK,WACJuF,QAAQC,IAAI,oCAEbC,MAAM,SAAAT,GACLO,QAAQP,MAAM,2BAA4BA,KAE3ChF,KAAK,SAAAJ,GACJrB,EAAK8D,SAAL1E,OAAA0C,EAAA,EAAA1C,CAAA,GAAmBgH,IACnBpG,EAAKlB,MAAM0F,QAAQC,KAAKe,KAEzB0B,MAAM,SAAAT,GACLzG,EAAK8D,SAAS,CAAE2C,YAEpBG,EAAMO,kBArCWnH,EAwCnBoH,SAAW,SAAAR,GACT5G,EAAK8D,SAAL1E,OAAAiI,EAAA,EAAAjI,CAAA,GAAiBwH,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAO7D,SAzCjCzD,EA4CnBuH,iBAAmB,SAAAX,GACjB5G,EAAK8D,SAAL1E,OAAAiI,EAAA,EAAAjI,CAAA,GAAiBwH,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOE,WA3ClDxH,EAAKiD,MAAL7D,OAAA0C,EAAA,EAAA1C,CAAA,GAAkBgH,GAFDpG,wEAgDV,IAAAyH,EAQHxH,KAAKgD,MANPoD,EAFKoB,EAELpB,SACAjG,EAHKqH,EAGLrH,MACAkG,EAJKmB,EAILnB,YACAC,EALKkB,EAKLlB,YACAC,EANKiB,EAMLjB,QACAC,EAPKgB,EAOLhB,MAGIiB,EACJpB,IAAgBC,GACA,KAAhBD,GACU,KAAVlG,GACa,KAAbiG,EAEF,OACEtH,EAAAC,EAAAC,cAAC8G,EAAD,CAAYI,UAAQ,EAACQ,SAAU1G,KAAK0G,SAAU9B,UAAU,gBAEtD9F,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,WACLxB,MAAO4C,EACPe,SAAUnH,KAAKmH,SACfO,KAAK,OACLC,YAAY,oBAEd7I,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,QACLxB,MAAOrD,EACPgH,SAAUnH,KAAKmH,SACfO,KAAK,OACLC,YAAY,UAEd7I,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,cACLxB,MAAO6C,EACPc,SAAUnH,KAAKmH,SACfO,KAAK,WACLC,YAAY,kBAEd7I,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,cACLxB,MAAO8C,EACPa,SAAUnH,KAAKmH,SACfO,KAAK,WACLC,YAAY,4BAEd7I,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,UACL0C,KAAK,WACLH,QAAShB,EACTY,SAAUnH,KAAKsH,oBAGnBxI,EAAAC,EAAAC,cAAA,UAAQ4I,SAAUH,EAAWC,KAAK,UAAlC,WAGClB,GAAS1H,EAAAC,EAAAC,cAAA,SAAIwH,EAAMqB,iBAhHCjJ,aAsHvBkJ,EAAa,kBACjBhJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMgJ,SAAP,KACEjJ,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GN9Ka,WM8KnB,wBAIE0C,EAAavD,YACjBC,IACA/F,EAFiB8F,CAGjBgC,GAEawB,EAnJI,kBACjBnJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACgJ,EAAD,QCzBE7B,EAAgB,CACpBhG,MAAO,GACPqG,MAAO,MAGH0B,cACJ,SAAAA,EAAYrJ,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAkI,IACjBnI,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAA+I,GAAAnF,KAAA/C,KAAMnB,KAIR6H,SAAW,SAAAC,GAAS,IACVxG,EAAUJ,EAAKiD,MAAf7C,MACRJ,EAAKlB,MAAMK,SACRyB,gBAAgBR,GAChBqB,KAAK,WACJzB,EAAK8D,SAAL1E,OAAA0C,EAAA,EAAA1C,CAAA,GAAmBgH,MAEpBc,MAAM,SAAAT,GACLzG,EAAK8D,SAAS,CAAE2C,YAEpBG,EAAMO,kBAfWnH,EAkBnBoH,SAAW,SAAAR,GACT5G,EAAK8D,SAAL1E,OAAAiI,EAAA,EAAAjI,CAAA,GAAiBwH,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAO7D,SAjBlDzD,EAAKiD,MAAL7D,OAAA0C,EAAA,EAAA1C,CAAA,GAAkBgH,GAFDpG,wEAsBV,IAAA6G,EACkB5G,KAAKgD,MAAtB7C,EADDyG,EACCzG,MAAOqG,EADRI,EACQJ,MACTiB,EAAsB,KAAVtH,EAClB,OACErB,EAAAC,EAAAC,cAAA,QAAM0H,SAAU1G,KAAK0G,UACnB5H,EAAAC,EAAAC,cAAA,SACEgG,KAAK,QACLxB,MAAOxD,KAAKgD,MAAM7C,MAClBgH,SAAUnH,KAAKmH,SACfO,KAAK,OACLC,YAAY,UAEd7I,EAAAC,EAAAC,cAAA,UAAQ4I,SAAUH,EAAWC,KAAK,UAAlC,0BAGClB,GAAS1H,EAAAC,EAAAC,cAAA,aAAKwH,EAAMqB,QAAX,aAtCmBjJ,aA4C/BuJ,EAAqB,kBACzBrJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMgJ,SAAP,KACEjJ,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GP7DqB,cO6D3B,+BAA+D,MAGpD8C,EA/DY,WACzB,OACEtJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACqJ,EAAD,QA4DAA,EAAqB1J,EAAauJ,GChDlC/B,EAAgB,CACpBhG,MAAO,GACPC,SAAU,GACVoG,MAAO,MAGH8B,cACJ,SAAAA,EAAYzJ,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAsI,IACjBvI,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAmJ,GAAAvF,KAAA/C,KAAMnB,KAKR6H,SAAW,SAAAC,GAAS,IAAAC,EACU7G,EAAKiD,MAAzB7C,EADUyG,EACVzG,MAAOC,EADGwG,EACHxG,SAEfL,EAAKlB,MAAMK,SACRqB,6BAA6BJ,EAAOC,GACpCoB,KAAK,WACJzB,EAAK8D,SAAL1E,OAAA0C,EAAA,EAAA1C,CAAA,GAAmBgH,IACnBpG,EAAKlB,MAAM0F,QAAQC,KAAKe,KAEzB0B,MAAM,SAAAT,GACLzG,EAAK8D,SAAS,CAAE2C,YAGpBG,EAAMO,kBAnBWnH,EAsBnBoH,SAAW,SAAAR,GACT5G,EAAK8D,SAAL1E,OAAAiI,EAAA,EAAAjI,CAAA,GAAiBwH,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAO7D,SApBlDzD,EAAKiD,MAAL7D,OAAA0C,EAAA,EAAA1C,CAAA,GAAkBgH,GAHDpG,wEA0BV,IAAAyH,EAC4BxH,KAAKgD,MAAhC7C,EADDqH,EACCrH,MAAOC,EADRoH,EACQpH,SAAUoG,EADlBgB,EACkBhB,MAEnBiB,EAAyB,KAAbrH,GAA6B,KAAVD,EAErC,OACErB,EAAAC,EAAAC,cAAA,QAAM0H,SAAU1G,KAAK0G,UACnB5H,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,QACLxB,MAAOrD,EACPgH,SAAUnH,KAAKmH,SACfO,KAAK,OACLC,YAAY,UAEd7I,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,WACLxB,MAAOpD,EACP+G,SAAUnH,KAAKmH,SACfO,KAAK,WACLC,YAAY,kBAEd7I,EAAAC,EAAAC,cAAA,UAAQ4I,SAAUH,EAAWC,KAAK,UAAlC,qBAIClB,GAAS1H,EAAAC,EAAAC,cAAA,SAAIwH,EAAMqB,iBAtDCjJ,aA4DvB2J,EAAa,kBACjBzJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMgJ,SAAP,KACEjJ,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAMC,GRxFa,WQwFnB,yBAIEkD,EAAa/D,YACjBC,IACA/F,EAFiB8F,CAGjB6D,GAEaG,EA1FI,kBACjB3J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACwJ,EAAD,MACA1J,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAC0J,EAAD,OAET5J,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC2J,EAAD,SCwBSC,EAjCC,kBACd9J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wDACuCF,EAAAC,EAAAC,cAAC0J,EAAD,MADvC,KAGA5J,EAAAC,EAAAC,cAAA,sBACWF,EAAAC,EAAAC,cAAC6J,EAAD,OAGX/J,EAAAC,EAAAC,cAACkG,EAAD,CACEF,KAAK,WACLD,OAAQ,WACNgC,QAAQC,IAAI,YACZ8B,OAAOC,SAASC,KAAO,wBAG3BlK,EAAAC,EAAAC,cAACkG,EAAD,CACEF,KAAK,iBACLD,OAAQ,WACNgC,QAAQC,IAAI,mBAEdnC,eAAe,cAGjB/F,EAAAC,EAAAC,cAACiK,EAAgBhK,SAAjB,KACG,SAAAC,GACC,OAAOJ,EAAAC,EAAAC,cAAA,mECtBAoF,KAFG,SAAAhD,GAAQ,QAAMA,GAEjBgD,CAVE,kBACftF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,kCAA0BR,IAAM0K,YCH9B/C,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACbE,MAAO,MAGH2C,eACJ,SAAAA,EAAYtK,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmJ,IACjBpJ,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAgK,GAAApG,KAAA/C,KAAMnB,KAKR6H,SAAW,SAAAC,GAAS,IACVN,EAAgBtG,EAAKiD,MAArBqD,YAERtG,EAAKlB,MAAMK,SACR2B,iBAAiBwF,GACjB7E,KAAK,WACJzB,EAAK8D,SAAL1E,OAAA0C,EAAA,EAAA1C,CAAA,GAAmBgH,OAEpBc,MAAM,SAAAT,GACLzG,EAAK8D,SAAS,CAAE2C,YAGpBG,EAAMO,kBAlBWnH,EAqBnBoH,SAAW,SAAAR,GACT5G,EAAK8D,SAAL1E,OAAAiI,EAAA,EAAAjI,CAAA,GAAiBwH,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAO7D,SAnBlDzD,EAAKiD,MAAL7D,OAAA0C,EAAA,EAAA1C,CAAA,GAAkBgH,IAHDpG,wEAyBV,IAAA6G,EACqC5G,KAAKgD,MAAzCqD,EADDO,EACCP,YAAaC,EADdM,EACcN,YAAaE,EAD3BI,EAC2BJ,MAE5BiB,EAAYpB,IAAgBC,GAA+B,KAAhBD,EAEjD,OACEvH,EAAAC,EAAAC,cAAA,QAAM0H,SAAU1G,KAAK0G,UACnB5H,EAAAC,EAAAC,cAAA,SACEgG,KAAK,cACLxB,MAAO6C,EACPc,SAAUnH,KAAKmH,SACfO,KAAK,WACLC,YAAY,wBAEd7I,EAAAC,EAAAC,cAAA,SACEgG,KAAK,cACLxB,MAAO8C,EACPa,SAAUnH,KAAKmH,SACfO,KAAK,WACLC,YAAY,4BAEd7I,EAAAC,EAAAC,cAAA,UAAQ4I,SAAUH,EAAWC,KAAK,UAAlC,4BAIClB,GAAS1H,EAAAC,EAAAC,cAAA,SAAIwH,EAAMqB,iBAnDKjJ,aAyDlBD,KAAawK,IClCb/E,KAHG,SAAAhD,GAAQ,OAAIA,KAAcA,GAG7BgD,CA1BK,kBAClBtF,EAAAC,EAAAC,cAAC+E,EAAgB9E,SAAjB,KACG,SAAAmC,GAAQ,OACPtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,mBAAWoC,EAASgF,SAApB,KACAtH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCoC,EAASE,KAEzCxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACqJ,EAAD,OAEFvJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACoK,GAAD,YChBJC,eACJ,SAAAA,EAAYxK,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAqJ,IACjBtJ,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAAkK,GAAAtG,KAAA/C,KAAMnB,KAEDmE,MAAQ,CACXsG,SAAS,EACTnH,MAAO,IALQpC,mFASC,IAAA0D,EAAAzD,KAClBA,KAAK6D,SAAS,CAAEyF,SAAS,IAEzBtJ,KAAKuJ,YAAcvJ,KAAKnB,MAAMK,SAASiD,QAAQqH,WAAW,SAAAC,GACxD,IAAIpI,EAAO,GAEXoI,EAAcC,KAAKC,IAAI,SAAAC,GACrB,IAAMC,EAAc,CAAEC,OAAQF,EAAEG,GAAIC,SAAUJ,EAAEjI,QAEhD,OADAN,EAAKmD,KAAKqF,GACHxI,IAEToC,EAAKI,SAAS,CAAE1B,MAAOd,EAAMiI,SAAS,qDAKxCtJ,KAAKuJ,+CAGE,IAAA3C,EACoB5G,KAAKgD,MAAxBb,EADDyE,EACCzE,MAAOmH,EADR1C,EACQ0C,QAEf,OACExK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACCsK,GAAWxK,EAAAC,EAAAC,cAAA,0BACZF,EAAAC,EAAAC,cAAA,UACGmD,EAAMwH,IAAI,SAAAtI,GAAI,OACbvC,EAAAC,EAAAC,cAAA,MAAIuE,IAAKlC,EAAKyI,QACZhL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,IACwBqC,EAAKyI,QAE7BhL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBADF,IAC4BqC,EAAK2I,SAAS7J,OAE1CrB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BqC,EAAK2I,SAAS5D,UAE5CtH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACEC,GAAI,CACF2E,SAAQ,GAAA/H,OblDC,YakDD,KAAAA,OAA6Bb,EAAKyI,QAC1C9G,MAAO,CAAE3B,UAHb,wBAjDOzC,aAkERD,KAAa0K,ICpEtBa,eACJ,SAAAA,EAAYrL,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAkK,IACjBnK,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAa,KAAAb,OAAA2D,EAAA,EAAA3D,CAAA+K,GAAAnH,KAAA/C,KAAMnB,KA+BRsL,yBAA2B,WACzBpK,EAAKlB,MAAMK,SAASyB,gBAAgBZ,EAAKiD,MAAM3B,KAAKlB,QA9BpDJ,EAAKiD,MAAL7D,OAAA0C,EAAA,EAAA1C,CAAA,CACEmK,SAAS,EACTjI,KAAM,MACHxC,EAAMkK,SAAS/F,OANHjD,mFAUC,IAAA0D,EAAAzD,KACdA,KAAKgD,MAAM3B,KACb0F,QAAQC,IAAIhH,KAAKgD,MAAM3B,OAIzBrB,KAAK6D,SAAS,CAAEyF,SAAS,IAEzBtJ,KAAKuJ,YAAcvJ,KAAKnB,MAAMK,SAC3BmC,KAAKrB,KAAKnB,MAAMuL,MAAMC,OAAON,IAC7BP,WAAW,SAAA/H,GACVgC,EAAKI,SAAS,CACZxC,KAAMI,EAASE,OACf2H,SAAS,sDAMftJ,KAAKuJ,aAAevJ,KAAKuJ,+CAOlB,IAAA3C,EACmB5G,KAAKgD,MAAvB3B,EADDuF,EACCvF,KAAMiI,EADP1C,EACO0C,QAEd,OACExK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWgB,KAAKnB,MAAMuL,MAAMC,OAAON,GAAnC,KACCT,GAAWxK,EAAAC,EAAAC,cAAA,0BAEXqC,GACCvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,IACwBqC,EAAKC,KAE7BxC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBADF,IAC4BqC,EAAKlB,OAEjCrB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8BqC,EAAK+E,UAEnCtH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQ0I,KAAK,SAAS5C,QAAS9E,KAAKmK,0BAApC,iCAzDSvL,aAoERD,KAAauL,IC/Cb9F,KAFG,SAAAhD,GAAQ,OAAIA,KAAcA,EAASQ,MAAM4D,IAE5CpB,CAjBG,kBAChBtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,2FAKAF,EAAAC,EAAAC,cAACsL,EAAA,EAAD,KACExL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KfVU,YeUkBC,UAAWP,KACpDpL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KfZE,SeYkBC,UAAWpB,uJCElD,IAAMqB,GAAK3E,IAAO4E,GAAVC,MAkCOlI,KA5BH,WACV,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0L,GAAD,YACA5L,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAC6L,EAAD,MACA/L,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBpCA,IgBoCsBC,UAAWK,IAC9ChM,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBpCA,UgBoCsBC,UAAWxC,IAC9CnJ,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBpCA,UgBoCsBC,UAAWhC,IAC9C3J,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CACEC,OAAK,EACLC,KhBpCmB,agBqCnBC,UAAWrC,IAEbtJ,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMjF,EAAakF,UAAWM,KAC3CjM,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBzCA,WgByCsBC,UAAWO,KAC9ClM,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBxCF,SgBwCsBC,UAAWQ,KAC5CnM,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAOC,OAAK,EAACC,KhBxCM,YgBwCsBC,UAAWP,UCnC1CgB,QACW,cAA7BpC,OAAOC,SAASoC,UAEe,UAA7BrC,OAAOC,SAASoC,UAEhBrC,OAAOC,SAASoC,SAASf,MACvB,2DCXNgB,IAASC,OACPvM,EAAAC,EAAAC,cAACiK,EAAgBjF,SAAjB,CAA0BR,MAAO,IAAI1D,GACnChB,EAAAC,EAAAC,cAACsM,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnK,KAAK,SAAAoK,GACjCA,EAAaC","file":"static/js/main.4c6b82b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  //  If the user is not null, we will get the database user with the help of the authenticated user’s unique identifier,\r\n  //  and then we merge everything from the database user with the unique identifier and email from the authenticated user.\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        // console.log(authUser);\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n            // console.log(dbUser);\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    // // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const ADMIN = \"/admin\";\r\nexport const ADMIN_DETAILS = \"/admin/id\";\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          //  If the user is null, it redirects.\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN)\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization); //como higher order function en vanilla JS\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = \"ADMIN\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi Cuenta</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Bienvenidx</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear Cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormSignUp = styled.form`\r\n  display: flex;\r\n  max-width: 20rem;\r\n  padding: 0.5rem;\r\n  ${props => props.vertical && \"flex-direction: column;\"} > * {\r\n    flex: 1;\r\n\r\n    &:not(:first-child) {\r\n      ${props => (props.vertical ? \"margin-top\" : \"margin-left\")}: 0.5rem;\r\n    }\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    border: 1px solid #b6b6b6;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #ff00cb;\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem;\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n  }\r\n`;\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email,\r\n            roles\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <FormSignUp vertical onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </FormSignUp>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_IN}> Iniciar Sesión </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { SignInLink } from \"../SignIn\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n    <h2>\r\n      O puedes <SignInLink />\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { withAuthorization } from \"../Session\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\n// import * as ROLES from \"../../constants/roles\";\r\n// import { auth } from \"firebase\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.username}!</h2>\r\n        <p>\r\n          <strong>ID USUARIO:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n        {/* {console.log(authUser)} */}\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser;\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { withFirebase } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\n      var user = [];\n\n      querySnapshot.docs.map(e => {\n        const usersincome = { userID: e.id, userData: e.data() };\n        user.push(usersincome);\n        return user;\n      });\n      this.setState({ users: user, loading: false });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h2>Users</h2>\n        {loading && <div>Loading ...</div>}\n        <ul>\n          {users.map(user => (\n            <li key={user.userID}>\n              <span>\n                <strong>ID:</strong> {user.userID}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.userData.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.userData.username}\n              </span>\n              <span>\n                <Link\n                  to={{\n                    pathname: `${ROUTES.ADMIN_DETAILS}/${user.userID}`,\n                    state: { user }\n                  }}\n                >\n                  Details\n                </Link>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserList);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nclass UserItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      user: null,\n      ...props.location.state\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.user) {\n      console.log(this.state.user);\n      return;\n    }\n\n    this.setState({ loading: true });\n\n    this.unsubscribe = this.props.firebase\n      .user(this.props.match.params.id)\n      .onSnapshot(snapshot => {\n        this.setState({\n          user: snapshot.data(),\n          loading: false\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe && this.unsubscribe();\n  }\n\n  onSendPasswordResetEmail = () => {\n    this.props.firebase.doPasswordReset(this.state.user.email);\n  };\n\n  render() {\n    const { user, loading } = this.state;\n\n    return (\n      <div>\n        <h2>User ({this.props.match.params.id})</h2>\n        {loading && <div>Loading ...</div>}\n\n        {user && (\n          <div>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n            <span>\n              <button type=\"button\" onClick={this.onSendPasswordResetEmail}>\n                Send Password Reset\n              </button>\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(UserItem);\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { withAuthorization } from \"../Session\";\r\nimport { UserList, UserItem } from \"../Users\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n    <p>\r\n      Esta página es visible a todos los usuarios logueados como\r\n      administradores.\r\n    </p>\r\n\r\n    <Switch>\r\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default withAuthorization(condition)(AdminPage);\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Switch, Route, Link } from \"react-router-dom\";\r\n// import { compose } from \"recompose\";\r\n\r\n// import { withFirebase } from \"../Firebase\";\r\n// import { withAuthorization } from \"../Session\";\r\n// import * as ROLES from \"../../constants/roles\";\r\n// import * as ROUTES from \"../../constants/routes\";\r\n\r\n// // const NewAdminPage = () => (\r\n// //   <div>\r\n// //     <h1>Admin</h1>\r\n// //     <p>The Admin Page is accessible by every signed in admin user.</p>\r\n// //     <Switch>\r\n// //       <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n// //       <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n// //     </Switch>\r\n// //   </div>\r\n// // );\r\n\r\n// class Admin extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       loading: false,\r\n//       users: []\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.setState({ loading: true });\r\n\r\n//     this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n//       var user = [];\r\n\r\n//       querySnapshot.docs.map(e => {\r\n//         const usersincome = { userID: e.id, userData: e.data() };\r\n//         user.push(usersincome);\r\n//         return user;\r\n//       });\r\n//       this.setState({ users: user, loading: false });\r\n//     });\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     this.unsubscribe();\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state.users);\r\n//     const { users, loading } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1>Admin</h1>\r\n\r\n//         {loading && <div>Loading ...</div>}\r\n\r\n//         <UserList users={users} />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const UserList = ({ users }) => (\r\n//   <ul>\r\n//     {users.map(user => (\r\n//       <li key={user.userID}>\r\n//         <span>\r\n//           <strong>ID:</strong> {user.userID}\r\n//         </span>\r\n//         <span>\r\n//           <strong>E-Mail:</strong> {user.userData.email}\r\n//         </span>\r\n//         <span>\r\n//           <strong>Nombre de Usuario:</strong> {user.userData.username}\r\n//         </span>\r\n//         <span>\r\n//           {/* <strong>Rol:</strong> {user.userData.roles.map(rol => rol.ADMIN)} */}\r\n//         </span>\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\n// export default compose(\r\n//   withFirebase,\r\n//   withAuthorization(condition)\r\n// )(Admin);\r\n\r\n// // const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n// // return compose(\r\n// //   withFirebase,\r\n// //   withAuthorization(condition)\r\n// // )(Admin); //como higher order function en vanilla JS\r\n\r\n// // class AdminPage extends Component {\r\n// //   constructor(props) {\r\n// //     super(props);\r\n// //     this.state = {\r\n// //       loading: false,\r\n// //       users: []\r\n// //     };\r\n// //   }\r\n// // componentDidMount() {\r\n// //   this.setState({ loading: true });\r\n\r\n// //   this.props.firebase.user().on(\"value\", snapshot => {\r\n// //     const usersObject = snapshot.val();\r\n\r\n// //     const usersList = Object.keys(usersObject).map(key => ({\r\n// //       ...usersObject[key],\r\n// //       uid: key\r\n// //     }));\r\n\r\n// //     this.setState({\r\n// //       users: usersList,\r\n// //       loading: false\r\n// //     });\r\n// //   });\r\n// // }\r\n\r\n// // componentWillUnmount() {\r\n// //   this.props.firebase.users().off();\r\n// // }\r\n\r\n// //   render() {\r\n// //     return (\r\n// //       <AuthUserContext.Consumer>\r\n// //         <h1>AdminPage</h1>\r\n// //       </AuthUserContext.Consumer>\r\n// //     );\r\n// //   }\r\n// // }\r\n\r\n// // const condition = authUser => !!authUser;\r\n\r\n// // const Admin = compose(\r\n// //   withFirebase,\r\n// //   withAuthorization(condition)\r\n// // )(AdminPage);\r\n\r\n// // export default Admin;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\nimport { UserItem } from \"../Users\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n          <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}