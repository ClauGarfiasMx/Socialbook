{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Button/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/SignUp/index.js","components/Landing/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","fieldValue","firestore","FieldValue","db","Button","className","concat","extraClassName","onClick","action","name","_ref","components_Button","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","objectSpread","catch","preventDefault","onChange","defineProperty","target","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Fragment","SignUpForm","SignUpPage","Landing","SignUp_SignUpLink","console","log","window","location","href","context","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","version","PasswordChangeForm","PasswordChange","Admin","H1","styled","h1","_templateObject","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76d5abee.chunk.js","sourcesContent":["import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { authUser: null };\r\n    }\r\n    // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? this.setState({ authUser })\r\n          : this.setState({ authUser: null });\r\n        // If a user signs out, the authUser object becomes null\r\n        // so the authUser property in the local state is set to null\r\n      });\r\n    }\r\n    // Removes listener if the component unmounts\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          // condition() is executed with the authUser\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n          // If authorization fails,\r\n          //for instance because the authenticated user is null ,\r\n          //the component redirects to the sign in page.\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization);\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\nconst Navigation = () => (\r\n  <nav className=\"main-menu\">\r\n    <AuthUserContext.Consumer>\r\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\r\n      {/* {authUser ? <NavigationAuth /> : <NavigationNonAuth />} */}\r\n    </AuthUserContext.Consumer>\r\n  </nav>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi cuenta</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear una cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\n// {\r\n//   return (\r\n//     <nav className=\"main-menu\">\r\n//       <ul className=\"flex-row\">\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_IN}>Entrar</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_UP}>Registrarse</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.HOME}>Home</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ACCOUNT}>Cuenta</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ADMIN}>Administración</Link>\r\n//         </li>\r\n//         <li>\r\n//           <SignOutButton />\r\n//         </li>\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React from \"react\";\r\nimport { withAuthorization } from \"../Session\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.email}!</h2>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React from \"react\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n      <h1>Admin</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}