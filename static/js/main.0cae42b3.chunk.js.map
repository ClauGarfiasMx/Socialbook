{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/Button/index.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Landing/index.js","components/Home/Try.js","components/Posts/CreatePost.js","components/Posts/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","emailVerified","providerData","db","doc","concat","users","collection","message","messages","app","initializeApp","fieldValue","firestore","FieldValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","withEmailverification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Button","className","extraClassName","action","name","_ref","components_Button","ADMIN","NavigationAuth","react_router_dom","to","ROUTES","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","FormSignUp","styled","form","_templateObject","vertical","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","set","merge","console","log","catch","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","Fragment","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInLink","SignInForm","SignInPage","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","Landing","SignIn_SignInLink","window","location","href","Firebase_context","MessageList","loading","unsubscribe","onSnapshot","querySnapshot","docs","e","messagesincome","messageID","id","messageData","text","createdAt","toDate","toString","ImagePreview","img","CreatePost_templateObject","CreatePostBase","onChangeText","isPublic","images","file","imagePreviewUrl","moment","getDate","handleImageChange","bind","assertThisInitialized","handleImageSubmit","createPost","d","Date","date","String","padStart","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","reader","FileReader","files","extension","split","pop","toLowerCase","indexOf","onloadend","result","readAsDataURL","_this3","accept","src","CreatePost","withEmailVerification","version","Posts","Try","PasswordChangeForm","PasswordChange","UserList","usersincome","userID","userData","react_router","exact","path","component","H1","h1","App_templateObject","components_Navigation","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cae42b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\r\n    });\r\n\r\n  //  If the user is not null, we will get the database user with the help of the authenticated user’s unique identifier,\r\n  //  and then we merge everything from the database user with the unique identifier and email from the authenticated user.\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        // console.log(authUser);\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n            // console.log(dbUser);\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n\r\n  // *** User API ***\r\n  message = uid => this.db.doc(`messages/${uid}`);\r\n  messages = () => this.db.collection(\"messages\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    // // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const ADMIN = \"/admin\";\r\nexport const ADMIN_DETAILS = \"/admin/id\";\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          //  If the user is null, it redirects.\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN)\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization); //como higher order function en vanilla JS\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withEmailverification = Component => {\r\n  //Add a function in this file that checks if the\r\n  //authenticated user has a verified email and an\r\n  //email/password sign in on associated with it\r\n  const needsEmailVerification = authUser =>\r\n    authUser &&\r\n    !authUser.emailVerified &&\r\n    authUser.providerData\r\n      .map(provider => provider.providerId)\r\n      .includes(\"password\");\r\n  //If this is true, don’t render the component passed\r\n  //to this higher-order component, but a message that\r\n  //reminds users to verify their email addresses.\r\n\r\n  class withEmailverification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { isSent: false };\r\n    }\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    Se ha enviado un email de confirmación: revisa tus correos\r\n                    incluyendo el Spam. Refresca esta página una vez que hayas\r\n                    confirmado.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Se ha enviado un email de confirmación: revisa tus correos\r\n                    incluyendo el Spam. Puedes reenviarlo si no lo has recibido.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Enviar email de confirmación\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(withEmailverification);\r\n};\r\n\r\nexport default withEmailverification;\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = \"ADMIN\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi Cuenta</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Bienvenidx</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear Cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormSignUp = styled.form`\r\n  display: flex;\r\n  max-width: 20rem;\r\n  padding: 0.5rem;\r\n  ${props => props.vertical && \"flex-direction: column;\"} > * {\r\n    flex: 1;\r\n\r\n    &:not(:first-child) {\r\n      ${props => (props.vertical ? \"margin-top\" : \"margin-left\")}: 0.5rem;\r\n    }\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    border: 1px solid #b6b6b6;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #ff00cb;\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem;\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n  }\r\n`;\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore MERGE Users\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email,\r\n            roles\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <FormSignUp vertical onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </FormSignUp>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_IN}> Iniciar Sesión </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { SignInLink } from \"../SignIn\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n    <h2>\r\n      O puedes <SignInLink />\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n// import * as ROUTES from \"../../constants/routes\";\r\n\r\nclass MessageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      messages: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase\r\n      .messages()\r\n      .onSnapshot(querySnapshot => {\r\n        var message = [];\r\n\r\n        querySnapshot.docs.map(e => {\r\n          const messagesincome = { messageID: e.id, messageData: e.data() };\r\n          message.push(messagesincome);\r\n          return message;\r\n        });\r\n        this.setState({ messages: message, loading: false });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const { messages, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>messages</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <div>\r\n          {console.log(this.state.messages)}\r\n          {messages.map(message => (\r\n            <div key={message.messageID}>\r\n              <span>\r\n                <strong>ID:</strong> {message.messageID}\r\n              </span>\r\n              <span>\r\n                <strong>texto:</strong> {message.messageData.text}\r\n              </span>\r\n              <span>\r\n                <strong>fecha:</strong>{\" \"}\r\n                {message.messageData.createdAt.toDate().toString()}\r\n              </span>\r\n              <span />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(MessageList);\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext } from \"../Session\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImagePreview = styled.img`\r\n  max-width: 30%;\r\n`;\r\n\r\nclass CreatePostBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      text: \"\",\r\n      images: { file: \"\", imagePreviewUrl: \"\" },\r\n      isPublic: false,\r\n      error: null,\r\n      moment: this.getDate()\r\n    };\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.handleImageSubmit = this.handleImageSubmit.bind(this);\r\n    this.createPost = this.createPost.bind(this);\r\n  }\r\n  getDate() {\r\n    let moment = { date: null, time: null };\r\n    let d = new Date();\r\n    let today = `${String(d.getDate()).padStart(2, \"0\")}/${String(\r\n      d.getMonth() + 1\r\n    ).padStart(2, \"0\")}/${d.getFullYear()}`;\r\n    let time = `${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\r\n    moment = { date: today, time: time };\r\n    return moment;\r\n  }\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n    console.log(this.state.text);\r\n  };\r\n  onChangeCheckbox = event => {\r\n    this.setState({ isPublic: event.target.checked });\r\n    console.log(\"Public: \" + this.state.isPublic);\r\n  };\r\n  // createPost(event, authUser) {}\r\n\r\n  handleImageSubmit(e) {\r\n    e.preventDefault();\r\n    // TODO: do something with -> this.state.file\r\n  }\r\n\r\n  handleImageChange(e) {\r\n    e.preventDefault();\r\n    let fileTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      let extension = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLowerCase();\r\n      let isImage = fileTypes.indexOf(extension) > -1;\r\n      if (isImage) {\r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            error: null,\r\n            images: { file: file, imagePreviewUrl: reader.result }\r\n          });\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        this.setState({ error: \"No es un archivo de imagen\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  createPost(name) {\r\n    this.setState({ username: name });\r\n    console.log(this.state);\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            <h2>Hola, {authUser.username}</h2>\r\n            <h3>Comparte tu último descubrimiento:</h3>\r\n            <input type=\"text\" onChange={this.onChangeText} />\r\n            <label>\r\n              Post privado (visible sólo en mi club):\r\n              <input\r\n                name=\"isPublic\"\r\n                type=\"checkbox\"\r\n                checked={this.state.isPublic}\r\n                value={false}\r\n                onChange={this.onChangeCheckbox}\r\n              />\r\n            </label>\r\n            <div>\r\n              <form onSubmit={this.handleImageSubmit}>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.handleImageChange}\r\n                />\r\n                <button type=\"submit\" onClick={this.handleImageSubmit}>\r\n                  Subir Imagen\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ImagePreview src={this.state.images.imagePreviewUrl} />\r\n            <div>{this.state.error}</div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                this.createPost(authUser.username);\r\n              }}\r\n            >\r\n              Publicar\r\n            </button>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst CreatePost = withFirebase(CreatePostBase);\r\n\r\nexport default CreatePost;\r\n","import CreatePost from \"./CreatePost\";\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport MessageList from \"./Try\";\r\nimport CreatePost from \"../Posts\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n    <CreatePost />\r\n    <MessageList />\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\n// const TryBase = () => (\r\n//   <div>\r\n//     <p>Hello there</p>\r\n//   </div>\r\n// );\r\n\r\n// const Try = withEmailVerification(TryBase);\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification\r\n} from \"../Session\";\r\n// import * as ROLES from \"../../constants/roles\";\r\n// import { auth } from \"firebase\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.username}!</h2>\r\n        <p>\r\n          <strong>ID USUARIO:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n        {/* {console.log(authUser)} */}\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser;\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AccountPage);\r\n","import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n// import * as ROUTES from \"../../constants/routes\";\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n      var user = [];\r\n\r\n      querySnapshot.docs.map(e => {\r\n        const usersincome = { userID: e.id, userData: e.data() };\r\n        user.push(usersincome);\r\n        return user;\r\n      });\r\n      this.setState({ users: user, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.userID}>\r\n              <span>\r\n                <strong>ID:</strong> {user.userID}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.userData.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.userData.username}\r\n              </span>\r\n              <span>\r\n                {/* <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN_DETAILS}/${user.userID}`,\r\n                    state: { user }\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link> */}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport { UserList } from \"../Users\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n    <p>\r\n      Esta página es visible a todos los usuarios logueados como\r\n      administradores.\r\n    </p>\r\n\r\n    <Switch>\r\n      {/* <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} /> */}\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AdminPage);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\n// import { UserItem } from \"../Users\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n          {/* <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} /> */}\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}