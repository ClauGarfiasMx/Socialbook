{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/Button/index.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Landing/index.js","components/Posts/UploadImage.js","components/Posts/PostItem.js","components/Posts/PostsList.js","components/Posts/Posts.js","components/Posts/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","activeUser","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","emailVerified","providerData","db","doc","concat","users","collection","message","messages","post","posts","app","initializeApp","fieldValue","firestore","FieldValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","withEmailverification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Button","className","extraClassName","action","name","_ref","components_Button","ADMIN","NavigationAuth","react_router_dom","to","ROUTES","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","FormSignUp","styled","form","_templateObject","vertical","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","set","merge","console","log","catch","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","Fragment","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","ErrorParagraph","p","SignIn_templateObject","SignInFormBase","errorCode","codeMessageMapper","code","SignInLink","SignInForm","SignInPage","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","Landing","SignIn_SignInLink","window","location","href","Firebase_context","ImagePreview","img","UploadImage_templateObject","_templateObject2","UploadImage","accept","handleImageChange","src","imageUrl","UploadImage_ErrorParagraph","ImageFromPost","PostItem_templateObject","PostItem","editMode","_this$props","incomingPosts","authorUser","authorID","createdAt","toDate","toString","text","images","PostsList","onListenForPosts","loading","unsubscribe","orderBy","limit","onSnapshot","size","forEach","id","onNextPage","react_loader_spinner_default","Posts_PostItem","PostsBase","onChangeText","isPublic","bind","assertThisInitialized","createPost","e","reader","FileReader","file","files","extension","split","pop","toLowerCase","isImage","indexOf","onloadend","imageName","result","readAsDataURL","_this3","add","serverTimestamp","_this4","Posts_UploadImage","Posts_PostsList","Posts","withEmailVerification","version","components_Posts","PasswordChangeForm","PasswordChange","UserList","querySnapshot","docs","usersincome","userID","userData","react_router","exact","path","component","H1","h1","App_templateObject","components_Navigation","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8NAIeA,EAFSC,IAAMC,cAAc,yCCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIlCR,4BCNTW,eAAiB,CACrBC,OAAQC,0CACRC,WAAYD,sCACZE,YAAaF,6CACbG,UAAWH,sBACXI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,iBCTMO,EDab,SAAAA,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAUdE,iCAAmC,SAACC,EAAOC,GAAR,OACjCL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAXpCJ,KAadO,6BAA+B,SAACJ,EAAOC,GAAR,OAC7BL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAdhCJ,KAgBdS,UAAY,kBAAMV,EAAKM,KAAKK,WAhBdV,KAkBdW,gBAAkB,SAAAR,GAAK,OAAIJ,EAAKM,KAAKO,uBAAuBT,IAlB9CH,KAoBda,iBAAmB,SAAAT,GAAQ,OAAIL,EAAKM,KAAKS,YAAYC,eAAeX,IApBtDJ,KAsBdgB,wBAA0B,kBACxBjB,EAAKM,KAAKS,YAAYG,sBAAsB,CAC1CC,IAAK3B,2BAxBKS,KA2BdmB,WAAa,GA3BCnB,KAgCdoB,mBAAqB,SAACC,EAAMC,GAAP,OACnBvB,EAAKM,KAAKkB,mBAAmB,SAAAC,GACvBA,EAEFzB,EAAK0B,KAAKD,EAASE,KAChBC,MACAC,KAAK,SAAAC,GACJ,IAAMC,EAASD,EAASE,OAInBD,EAAOE,QACVF,EAAOE,MAAQ,IAIjBR,EAAQrC,OAAA8C,EAAA,EAAA9C,CAAA,CACNuC,IAAKF,EAASE,IACdvB,MAAOqB,EAASrB,MAChB+B,cAAeV,EAASU,cACxBC,aAAcX,EAASW,cACpBL,GAEL/B,EAAKoB,WAAaK,EAElBH,EAAKG,KAGTF,OA5DQtB,KAiEdyB,KAAO,SAAAC,GAAG,OAAI3B,EAAKqC,GAAGC,IAAR,SAAAC,OAAqBZ,KAjErB1B,KAkEduC,MAAQ,kBAAMxC,EAAKqC,GAAGI,WAAW,UAlEnBxC,KAqEdyC,QAAU,SAAAf,GAAG,OAAI3B,EAAKqC,GAAGC,IAAR,YAAAC,OAAwBZ,KArE3B1B,KAsEd0C,SAAW,kBAAM3C,EAAKqC,GAAGI,WAAW,aAtEtBxC,KAwEd2C,KAAO,SAAAjB,GAAG,OAAI3B,EAAKqC,GAAGC,IAAR,SAAAC,OAAqBZ,KAxErB1B,KAyEd4C,MAAQ,kBAAM7C,EAAKqC,GAAGI,WAAW,UAxE/BK,IAAIC,cAAczD,GAGlBW,KAAK+C,WAAaF,IAAIG,UAAUC,WAEhCjD,KAAKK,KAAOwC,IAAIxC,OAChBL,KAAKoC,GAAKS,IAAIG,aEqBHE,EAtCY,SAAAtE,GAAa,IAChCuE,EADgC,SAAAC,GAEpC,SAAAD,EAAYtE,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmD,IACjBpD,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAgE,GAAAI,KAAAvD,KAAMnB,KACD2E,MAAQ,CACXhC,SAAUiC,KAAKC,MAAMC,aAAaC,QAAQ,cAH3B7D,EAFiB,OAAAZ,OAAA0E,EAAA,EAAA1E,CAAAgE,EAAAC,GAAAjE,OAAA2E,EAAA,EAAA3E,CAAAgE,EAAA,EAAAY,IAAA,oBAAAC,MAAA,WAYhB,IAAAC,EAAAjE,KAClBA,KAAKkE,SAAWlE,KAAKnB,MAAMK,SAASkC,mBAClC,SAAAI,GACEmC,aAAaQ,QAAQ,WAAYV,KAAKW,UAAU5C,IAChDyC,EAAKI,SAAS,CAAE7C,cAElB,WACEmC,aAAaW,WAAW,YACxBL,EAAKI,SAAS,CAAE7C,SAAU,WApBI,CAAAuC,IAAA,uBAAAC,MAAA,WA0BlChE,KAAKkE,aA1B6B,CAAAH,IAAA,SAAAC,MAAA,WA6BlC,OACElF,EAAAC,EAAAC,cAACuF,EAAgBC,SAAjB,CAA0BR,MAAOhE,KAAKwD,MAAMhC,UAC1C1C,EAAAC,EAAAC,cAACJ,EAAcoB,KAAKnB,YA/BUsE,EAAA,CACL3E,IAAMI,WAmCvC,OAAOD,EAAawE,YCtCTsB,EAAO,QC6CLC,EAxCY,SAAAC,GAAS,OAAI,SAAA/F,GAAa,IAC7CgG,EAD6C,SAAAxB,GAAA,SAAAwB,IAAA,OAAAzF,OAAAc,EAAA,EAAAd,CAAAa,KAAA4E,GAAAzF,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAyF,GAAAC,MAAA7E,KAAA8E,YAAA,OAAA3F,OAAA0E,EAAA,EAAA1E,CAAAyF,EAAAxB,GAAAjE,OAAA2E,EAAA,EAAA3E,CAAAyF,EAAA,EAAAb,IAAA,oBAAAC,MAAA,WAM7B,IAAAjE,EAAAC,KAClBA,KAAKkE,SAAWlE,KAAKnB,MAAMK,SAASkC,mBAClC,SAAAI,GAEOmD,EAAUnD,IACbzB,EAAKlB,MAAMkG,QAAQC,KDjBR,YCoBf,kBAAMjF,EAAKlB,MAAMkG,QAAQC,KDpBV,eCM8B,CAAAjB,IAAA,uBAAAC,MAAA,WAmB/ChE,KAAKkE,aAnB0C,CAAAH,IAAA,SAAAC,MAAA,WAsBxC,IAAAC,EAAAjE,KACP,OAEElB,EAAAC,EAAAC,cAACuF,EAAgBtF,SAAjB,KACG,SAAAuC,GAAQ,OAEPmD,EAAUnD,GAAY1C,EAAAC,EAAAC,cAACJ,EAAcqF,EAAKpF,OAAY,WA5Bb+F,EAAA,CACnBpG,IAAMI,WAiCtC,OAAOqG,YACLC,IACAvG,EAFKsG,CAGLL,KCuBWO,EAhEe,SAAAvG,GAI5B,IAUMuG,EAdmC,SAAA/B,GAevC,SAAA+B,EAAYtG,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmF,IACjBpF,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAgG,GAAA5B,KAAAvD,KAAMnB,KAGRuG,wBAA0B,WACxBrF,EAAKlB,MAAMK,SACR8B,0BACAY,KAAK,kBAAM7B,EAAKsE,SAAS,CAAEgB,QAAQ,OALtCtF,EAAKyD,MAAQ,CAAE6B,QAAQ,GAFNtF,EAfoB,OAAAZ,OAAA0E,EAAA,EAAA1E,CAAAgG,EAAA/B,GAAAjE,OAAA2E,EAAA,EAAA3E,CAAAgG,EAAA,EAAApB,IAAA,SAAAC,MAAA,WAyB9B,IAAAC,EAAAjE,KACP,OACElB,EAAAC,EAAAC,cAACuF,EAAgBtF,SAAjB,KACG,SAAAuC,GAAQ,OAxBc,SAAAA,GAAQ,OACrCA,IACCA,EAASU,eACVV,EAASW,aACNmD,IAAI,SAAAC,GAAQ,OAAIA,EAASC,aACzBC,SAAS,YAoBJC,CAAuBlE,GACrB1C,EAAAC,EAAAC,cAAA,WACGiF,EAAKT,MAAM6B,OACVvG,EAAAC,EAAAC,cAAA,oJAMAF,EAAAC,EAAAC,cAAA,uIAMFF,EAAAC,EAAAC,cAAA,UACE2G,KAAK,SACLC,QAAS3B,EAAKmB,wBACdS,SAAU5B,EAAKT,MAAM6B,QAHvB,oCASFvG,EAAAC,EAAAC,cAACJ,EAAcqF,EAAKpF,aArDSsG,EAAA,CAcL3G,IAAMI,WA+C1C,OAAOD,EAAawG,IClDPW,EAbA,SAAAjH,GACb,OACEC,EAAAC,EAAAC,cAAA,UACE+G,UAAS,yBAAAzD,OACPzD,EAAMmH,eAAiBnH,EAAMmH,eAAiB,IAEhDJ,QAAS/G,EAAMoH,QAEdpH,EAAMqH,OCFEvH,IAJO,SAAAwH,GAAA,IAAGjH,EAAHiH,EAAGjH,SAAH,OACpBJ,EAAAC,EAAAC,cAACoH,EAAD,CAAQF,KAAK,mBAAgBD,OAAQ/G,EAASuB,cCLnC4F,EAAQ,QCgBfC,EAAiB,SAAAH,GAAA,IAAG3E,EAAH2E,EAAG3E,SAAH,OACrB1C,EAAAC,EAAAC,cAAA,UAIEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GAAIC,GAAV,SAEF3H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GNrBW,YMqBjB,gBAEChF,EAASQ,MAAM0E,IAChB5H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GNvBO,UMuBb,UAMJ1H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2H,EAAD,SAKAC,EAAoB,kBACxB9H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GN5CW,KM4CjB,eAEF1H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GN7CW,WM6CjB,sBAEF1H,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GNjDW,WMiDjB,mBAKSK,EA/CI,kBACjB/H,EAAAC,EAAAC,cAACuF,EAAgBtF,SAAjB,KACG,SAAAuC,GAAQ,OACPA,EAAW1C,EAAAC,EAAAC,cAAC8H,EAAD,CAAgBtF,SAAUA,IAAe1C,EAAAC,EAAAC,cAAC+H,EAAD,ieCF1D,IAAMC,EAAaC,IAAOC,KAAVC,IAIZ,SAAAtI,GAAK,OAAIA,EAAMuI,UAAY,2BAIvB,SAAAvI,GAAK,OAAKA,EAAMuI,SAAW,aAAe,gBA4B5CC,EAAgB,CACpBC,SAAU,GACVnH,MAAO,GACPoH,YAAa,GACbC,YAAa,GACbC,SAAS,EACTC,MAAO,MAIHC,cACJ,SAAAA,EAAY9I,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2H,IACjB5H,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAwI,GAAApE,KAAAvD,KAAMnB,KAIR+I,SAAW,SAAAC,GAAS,IAAAC,EACgC/H,EAAKyD,MAA/C8D,EADUQ,EACVR,SAAUnH,EADA2H,EACA3H,MAAOoH,EADPO,EACOP,YAAaE,EADpBK,EACoBL,QAChCzF,EAAQ,GACVyF,IACFzF,EAAM0E,GAAeA,GAEvB3G,EAAKlB,MAAMK,SACRgB,iCAAiCC,EAAOoH,GACxC3F,KAAK,SAAAJ,GAEJ,OAAOzB,EAAKlB,MAAMK,SAASuC,KAAKD,EAASC,KAAKC,KAAKqG,IACjD,CACET,WACAnH,QACA6B,SAEF,CAAEgG,OAAO,MAGZpG,KAAK,WACJqG,QAAQC,IAAI,oCAEbC,MAAM,SAAAT,GACLO,QAAQP,MAAM,2BAA4BA,KAE3C9F,KAAK,WACJ,OAAO7B,EAAKlB,MAAMK,SAAS8B,4BAE5BY,KAAK,SAAAJ,GACJzB,EAAKsE,SAALlF,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBkI,IACnBtH,EAAKlB,MAAMkG,QAAQC,KAAKyB,KAEzB0B,MAAM,SAAAT,GACL3H,EAAKsE,SAAS,CAAEqD,YAEpBG,EAAMO,kBAxCWrI,EA2CnBsI,SAAW,SAAAR,GACT9H,EAAKsE,SAALlF,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAiB0I,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOvE,SA5CjCjE,EA+CnByI,iBAAmB,SAAAX,GACjB9H,EAAKsE,SAALlF,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAiB0I,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOE,WA9ClD1I,EAAKyD,MAALrE,OAAA8C,EAAA,EAAA9C,CAAA,GAAkBkI,GAFDtH,wEAmDV,IAAA2I,EAQH1I,KAAKwD,MANP8D,EAFKoB,EAELpB,SACAnH,EAHKuI,EAGLvI,MACAoH,EAJKmB,EAILnB,YACAC,EALKkB,EAKLlB,YACAC,EANKiB,EAMLjB,QACAC,EAPKgB,EAOLhB,MAGIiB,EACJpB,IAAgBC,GACA,KAAhBD,GACU,KAAVpH,GACa,KAAbmH,EAEF,OACExI,EAAAC,EAAAC,cAACgI,EAAD,CAAYI,UAAQ,EAACQ,SAAU5H,KAAK4H,SAAU7B,UAAU,gBAEtDjH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,WACLlC,MAAOsD,EACPe,SAAUrI,KAAKqI,SACf1C,KAAK,OACLiD,YAAY,oBAEd9J,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,QACLlC,MAAO7D,EACPkI,SAAUrI,KAAKqI,SACf1C,KAAK,OACLiD,YAAY,UAEd9J,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLlC,MAAOuD,EACPc,SAAUrI,KAAKqI,SACf1C,KAAK,WACLiD,YAAY,kBAEd9J,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLlC,MAAOwD,EACPa,SAAUrI,KAAKqI,SACf1C,KAAK,WACLiD,YAAY,4BAEd9J,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,UACLP,KAAK,WACL8C,QAAShB,EACTY,SAAUrI,KAAKwI,oBAGnB1J,EAAAC,EAAAC,cAAA,UAAQ6G,SAAU8C,EAAWhD,KAAK,UAAlC,WAGC+B,GAAS5I,EAAAC,EAAAC,cAAA,SAAI0I,EAAMjF,iBAnHC7D,aAyHvBiK,EAAa,kBACjB/J,EAAAC,EAAAC,cAACF,EAAAC,EAAM+J,SAAP,KACEhK,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GPjLa,WOiLnB,wBAIEuC,EAAa9D,YACjBC,IACAvG,EAFiBsG,CAGjB0C,GAEaqB,EAtJI,kBACjBlK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAC+J,EAAD,QCzBE1B,EAAgB,CACpBlH,MAAO,GACPuH,MAAO,MAGHuB,cACJ,SAAAA,EAAYpK,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAiJ,IACjBlJ,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAA8J,GAAA1F,KAAAvD,KAAMnB,KAIR+I,SAAW,SAAAC,GAAS,IACV1H,EAAUJ,EAAKyD,MAAfrD,MACRJ,EAAKlB,MAAMK,SACRyB,gBAAgBR,GAChByB,KAAK,WACJ7B,EAAKsE,SAALlF,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBkI,MAEpBc,MAAM,SAAAT,GACL3H,EAAKsE,SAAS,CAAEqD,YAEpBG,EAAMO,kBAfWrI,EAkBnBsI,SAAW,SAAAR,GACT9H,EAAKsE,SAALlF,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAiB0I,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOvE,SAjBlDjE,EAAKyD,MAALrE,OAAA8C,EAAA,EAAA9C,CAAA,GAAkBkI,GAFDtH,wEAsBV,IAAA+H,EACkB9H,KAAKwD,MAAtBrD,EADD2H,EACC3H,MAAOuH,EADRI,EACQJ,MACTiB,EAAsB,KAAVxI,EAClB,OACErB,EAAAC,EAAAC,cAAA,QAAM4I,SAAU5H,KAAK4H,UACnB9I,EAAAC,EAAAC,cAAA,SACEkH,KAAK,QACLlC,MAAOhE,KAAKwD,MAAMrD,MAClBkI,SAAUrI,KAAKqI,SACf1C,KAAK,OACLiD,YAAY,UAEd9J,EAAAC,EAAAC,cAAA,UAAQ6G,SAAU8C,EAAWhD,KAAK,UAAlC,0BAGC+B,GAAS5I,EAAAC,EAAAC,cAAA,aAAK0I,EAAMjF,QAAX,aAtCmB7D,aA4C/BsK,EAAqB,kBACzBpK,EAAAC,EAAAC,cAACF,EAAAC,EAAM+J,SAAP,KACEhK,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GR7DqB,cQ6D3B,+BAA+D,MAGpD2C,EA/DY,WACzB,OACErK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACoK,EAAD,QA4DAA,EAAqBzK,EAAasK,6FC5DxC,IAAMI,EAAiBpC,IAAOqC,EAAVC,KAiBdlC,EAAgB,CACpBlH,MAAO,GACPC,SAAU,GACVsH,MAAO,MAGH8B,cACJ,SAAAA,EAAY3K,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAwJ,IACjBzJ,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAqK,GAAAjG,KAAAvD,KAAMnB,KAKR+I,SAAW,SAAAC,GAAS,IAAAC,EACU/H,EAAKyD,MAAzBrD,EADU2H,EACV3H,MAAOC,EADG0H,EACH1H,SAEfL,EAAKlB,MAAMK,SACRqB,6BAA6BJ,EAAOC,GACpCwB,KAAK,WACJ7B,EAAKsE,SAALlF,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBkI,IACnBtH,EAAKlB,MAAMkG,QAAQC,KAAKyB,KAEzB0B,MAAM,SAAAT,GACL3H,EAAKsE,SAAS,CAAEqD,YAGpBG,EAAMO,kBAnBWrI,EAsBnBsI,SAAW,SAAAR,GACT9H,EAAKsE,SAALlF,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAiB0I,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOvE,SApBlDjE,EAAKyD,MAALrE,OAAA8C,EAAA,EAAA9C,CAAA,GAAkBkI,GAHDtH,iFA0BD0J,GAChB,IAAIhH,EAAU,GACd,OAAQgH,GACN,IAAK,qBACHhH,EAAU,oCACV,MACF,IAAK,sBACHA,EAAU,sCACV,MACF,IAAK,sBACHA,EAAU,2BACV,MACF,IAAK,4BACHA,EAAU,+CACV,MACF,IAAK,qBACHA,EAAU,oDAKd,OAAOA,mCAGA,IAAAiG,EAC4B1I,KAAKwD,MAAhCrD,EADDuI,EACCvI,MAAOC,EADRsI,EACQtI,SAAUsH,EADlBgB,EACkBhB,MAEnBiB,EAAyB,KAAbvI,GAA6B,KAAVD,EAErC,OACErB,EAAAC,EAAAC,cAAA,QAAM4I,SAAU5H,KAAK4H,UACnB9I,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,QACLlC,MAAO7D,EACPkI,SAAUrI,KAAKqI,SACf1C,KAAK,OACLiD,YAAY,UAEd9J,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,WACLlC,MAAO5D,EACPiI,SAAUrI,KAAKqI,SACf1C,KAAK,WACLiD,YAAY,kBAEd9J,EAAAC,EAAAC,cAAA,UAAQ6G,SAAU8C,EAAWhD,KAAK,UAAlC,qBAIC+B,GACC5I,EAAAC,EAAAC,cAACqK,EAAD,KAAiBrJ,KAAK0J,kBAAkBhC,EAAMiC,eA/E3B/K,aAsFvBgL,EAAa,kBACjB9K,EAAAC,EAAAC,cAACF,EAAAC,EAAM+J,SAAP,KACEhK,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GTvHa,WSuHnB,yBAIEqD,GAAa5E,YACjBC,IACAvG,EAFiBsG,CAGjBuE,GAEaM,GApHI,kBACjBhL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAC6K,GAAD,MACA/K,EAAAC,EAAAC,cAAA,mBACSF,EAAAC,EAAAC,cAAC+K,EAAD,OAETjL,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACgL,EAAD,SCmBSC,GAjCC,kBACdnL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wDACuCF,EAAAC,EAAAC,cAAC+K,EAAD,MADvC,KAGAjL,EAAAC,EAAAC,cAAA,sBACWF,EAAAC,EAAAC,cAACkL,EAAD,OAGXpL,EAAAC,EAAAC,cAACoH,EAAD,CACEF,KAAK,WACLD,OAAQ,WACNgC,QAAQC,IAAI,YACZiC,OAAOC,SAASC,KAAO,wBAG3BvL,EAAAC,EAAAC,cAACoH,EAAD,CACEF,KAAK,iBACLD,OAAQ,WACNgC,QAAQC,IAAI,mBAEdlC,eAAe,cAGjBlH,EAAAC,EAAAC,cAACsL,EAAgBrL,SAAjB,KACG,SAAAC,GACC,OAAOJ,EAAAC,EAAAC,cAAA,oQChCf,IAAMuL,GAAetD,IAAOuD,IAAVC,MAGZpB,GAAiBpC,IAAOqC,EAAVoB,MAqBLC,GAlBK,SAAA9L,GAClB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACE2G,KAAK,OACLiF,OAAO,UACPvC,SAAUxJ,EAAMgM,qBAGpB/L,EAAAC,EAAAC,cAACuL,GAAD,CAAcO,IAAKjM,EAAMkM,WACzBjM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgM,GAAD,KAAiBnM,EAAM6I,wGClB/B,IAAMuD,GAAgBhE,IAAOuD,IAAVU,MA0CJC,eArCb,SAAAA,EAAYtM,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAAmL,IACjBpL,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAgM,GAAA5H,KAAAvD,KAAMnB,KACD2E,MAAQ,CACX4H,UAAU,GAHKrL,wEAMV,IAAAsL,EAC+BrL,KAAKnB,MAAnCyM,EADDD,EACCC,cAAeC,EADhBF,EACgBE,WACvB,OACEzM,EAAAC,EAAAC,cAAA,WACGsM,GACCA,EAAchG,IAAI,SAAA3C,GAAI,OACpB7D,EAAAC,EAAAC,cAAA,OAAK+E,IAAKpB,EAAKjB,KACb5C,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,8BADF,IACiC2D,EAAKjB,KAEtC5C,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,+BADF,IACkC2D,EAAK6I,UAEvC1M,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,cAAS2D,EAAK2E,UADhB,iBAEExI,EAAAC,EAAAC,cAAA,aAAK2D,EAAK8I,UAAUC,SAASC,aAE/B7M,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAI2D,EAAKiJ,OAEX9M,EAAAC,EAAAC,cAACiM,GAAD,CAAeH,IAAKnI,EAAKkJ,OAAOd,WAChCjM,EAAAC,EAAAC,cAAA,UACCuM,EAAW7J,MAAQiB,EAAK6I,UAAY1M,EAAAC,EAAAC,cAAA,wBACrCF,EAAAC,EAAAC,cAAA,sBA9BSJ,iCCDjBkN,eACJ,SAAAA,EAAYjN,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA8L,IACjB/L,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAA2M,GAAAvI,KAAAvD,KAAMnB,KASRkN,iBAAmB,WACjBhM,EAAKsE,SAAS,CAAE2H,SAAS,IAEzBjM,EAAKkM,YAAclM,EAAKlB,MAAMK,SAC3B0D,QACAsJ,QAAQ,YAAa,QACrBC,MAAMpM,EAAKyD,MAAM2I,OACjBC,WAAW,SAAAvK,GACV,GAAIA,EAASwK,KAAM,CACjB,IAAIf,EAAgB,GACpBzJ,EAASyK,QAAQ,SAAAjK,GAAG,OAClBiJ,EAActG,KAAd7F,OAAA8C,EAAA,EAAA9C,CAAA,GAAwBkD,EAAIN,OAA5B,CAAoCL,IAAKW,EAAIkK,QAG/CxM,EAAKsE,SAAS,CACZiH,cAAeA,EACfU,SAAS,SAGXjM,EAAKsE,SAAS,CAAEiH,cAAe,KAAMU,SAAS,OA7BnCjM,EAiEnByM,WAAa,WACXzM,EAAKsE,SAAS,SAAAb,GAAK,MAAK,CAAE2I,MAAO3I,EAAM2I,MAAQ,IAAMpM,EAAKgM,mBA/D1DhM,EAAKyD,MAAQ,CACXwI,SAAS,EACTV,cAAe,GACfa,MAAO,GANQpM,mFA0DjBC,KAAK+L,kEAIL/L,KAAKiM,+CAOE,IAAAhI,EAAAjE,KAAA8H,EAC4B9H,KAAKwD,MAAhC8H,EADDxD,EACCwD,cAAeU,EADhBlE,EACgBkE,QAEvB,OACElN,EAAAC,EAAAC,cAACuF,EAAgBtF,SAAjB,KACG,SAAAsM,GAAU,OACTzM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BAECgN,GACClN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyN,GAAA1N,EAAD,CAAQ4G,KAAK,mBAIfqG,GAAWV,GACXxM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0N,GAAD,CACEpB,cAAerH,EAAKT,MAAM8H,cAC1BC,WAAYA,IAEdzM,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASC,QAAS3B,EAAKuI,YAApC,kBAMFlB,GAAiBxM,EAAAC,EAAAC,cAAA,gDAjGPJ,aAyGTD,KAAamN,ICtGtBa,eACJ,SAAAA,EAAY9N,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA2M,IACjB5M,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAwN,GAAApJ,KAAAvD,KAAMnB,KAaR+N,aAAe,SAAA/E,GACb9H,EAAKsE,SAAS,CACZuH,KAAM/D,EAAMU,OAAOvE,MAEnBwH,SAAUzL,EAAKlB,MAAMK,SAASiC,WAAWO,OAlB1B3B,EAsBnByI,iBAAmB,SAAAX,GACjB9H,EAAKsE,SAAS,CAAEwI,SAAUhF,EAAMU,OAAOE,UACvCR,QAAQC,IAAI,WAAanI,EAAKyD,MAAMqJ,WAtBpC9M,EAAKyD,MAAQ,CACXgI,SAAU,GACVK,OAAQ,GACRgB,UAAU,EACVnF,MAAO,KACPkE,KAAM,IAGR7L,EAAK8K,kBAAoB9K,EAAK8K,kBAAkBiC,KAAvB3N,OAAA4N,GAAA,EAAA5N,CAAAY,IACzBA,EAAKiN,WAAajN,EAAKiN,WAAWF,KAAhB3N,OAAA4N,GAAA,EAAA5N,CAAAY,IAXDA,iFA2BDkN,GAAG,IAAAhJ,EAAAjE,KACnBiN,EAAE7E,iBACF,IACM8E,EAAS,IAAIC,WACfC,EAAOH,EAAE1E,OAAO8E,MAAM,GAC1B,GAAID,EAAM,CACR,IAAIE,EAAYF,EAAKlH,KAClBqH,MAAM,KACNC,MACAC,cACGC,EARU,CAAC,MAAO,OAAQ,MAAO,OAQbC,QAAQL,IAAc,EAE1CjB,EAAOe,EAAKf,KAAO,QACpBqB,EAKOrB,GAMVrM,KAAKqE,SAAS,CAAEqD,MAAO,OAEvBwF,EAAOU,UAAY,WACjB3J,EAAKI,SAAS,CACZqD,MAAO,KACPmE,OAAQ,CAAEgC,UAAWT,EAAKlH,KAAM6E,SAAUmC,EAAOY,WAGrDZ,EAAOa,cAAcX,IAbrBpN,KAAKqE,SAAS,CACZqD,MAAO,2BACPmE,OAAQ,CAAEd,SAAU,MAPtB/K,KAAKqE,SAAS,CACZqD,MAAO,6BACPmE,OAAQ,CAAEd,SAAU,4CAqBf,IAAAiD,EAAAhO,KACXA,KAAKnB,MAAMK,SACR0D,QACAqL,IAFH9O,OAAA8C,EAAA,EAAA9C,CAAA,CAGImI,SAAUtH,KAAKnB,MAAMK,SAASiC,WAAWmG,SACzCmE,UAAWzL,KAAKnB,MAAMK,SAAS6D,WAAWmL,mBACvClO,KAAKwD,QAET5B,KAAK,WACJqG,QAAQC,IAAI8F,EAAKxK,OACjBwK,EAAK3J,SAAS,CACZmH,SAAU,GACVK,OAAQ,GACRgB,UAAU,EACVnF,MAAO,KACPkE,KAAM,KAGR3D,QAAQC,IAAI,kCACZD,QAAQC,IAAI8F,EAAKxK,SAElB2E,MAAM,SAAAT,GACLO,QAAQP,MAAM,2BAA4BA,sCAIvC,IAAAyG,EAAAnO,KACD2I,EAAgC,MAApB3I,KAAKwD,MAAMkE,OAAqC,KAApB1H,KAAKwD,MAAMoI,KAEzD,OACE9M,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iBAEEF,EAAAC,EAAAC,cAAA,iBAASgB,KAAKnB,MAAMK,SAASiC,WAAWmG,WAE1CxI,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAO0C,SAAUrI,KAAK4M,eAClC9N,EAAAC,EAAAC,cAAA,0DAEEF,EAAAC,EAAAC,cAAA,SACEkH,KAAK,WACLP,KAAK,WACL8C,QAASzI,KAAKwD,MAAMqJ,SACpB7I,OAAO,EACPqE,SAAUrI,KAAKwI,oBAGnB1J,EAAAC,EAAAC,cAACoP,GAAD,CACEvD,kBAAmB7K,KAAK6K,kBACxBE,SAAU/K,KAAKwD,MAAMqI,OAAOd,SAC5BrD,MAAO1H,KAAKwD,MAAMkE,QAGpB5I,EAAAC,EAAAC,cAAA,UACE6G,SAAU8C,EACVhD,KAAK,SACLC,QAAS,WACPuI,EAAKnB,eAJT,YASAlO,EAAAC,EAAAC,cAACqP,GAAD,cA/HgBzP,aCPT0P,GD4ID3P,EAAagO,IE5HZ1H,eACbsJ,EACA3J,EAJgB,SAAApD,GAAQ,QAAMA,IAEjByD,CAZE,kBACfnG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,kCAA0BR,IAAMgQ,SAChC1P,EAAAC,EAAAC,cAACyP,GAAD,SCPEpH,GAAgB,CACpBE,YAAa,GACbC,YAAa,GACbE,MAAO,MAGHgH,eACJ,SAAAA,EAAY7P,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA0O,IACjB3O,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAuP,GAAAnL,KAAAvD,KAAMnB,KAKR+I,SAAW,SAAAC,GAAS,IACVN,EAAgBxH,EAAKyD,MAArB+D,YAERxH,EAAKlB,MAAMK,SACR2B,iBAAiB0G,GACjB3F,KAAK,WACJ7B,EAAKsE,SAALlF,OAAA8C,EAAA,EAAA9C,CAAA,GAAmBkI,OAEpBc,MAAM,SAAAT,GACL3H,EAAKsE,SAAS,CAAEqD,YAGpBG,EAAMO,kBAlBWrI,EAqBnBsI,SAAW,SAAAR,GACT9H,EAAKsE,SAALlF,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAiB0I,EAAMU,OAAOrC,KAAO2B,EAAMU,OAAOvE,SAnBlDjE,EAAKyD,MAALrE,OAAA8C,EAAA,EAAA9C,CAAA,GAAkBkI,IAHDtH,wEAyBV,IAAA+H,EACqC9H,KAAKwD,MAAzC+D,EADDO,EACCP,YAAaC,EADdM,EACcN,YAAaE,EAD3BI,EAC2BJ,MAE5BiB,EAAYpB,IAAgBC,GAA+B,KAAhBD,EAEjD,OACEzI,EAAAC,EAAAC,cAAA,QAAM4I,SAAU5H,KAAK4H,UACnB9I,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLlC,MAAOuD,EACPc,SAAUrI,KAAKqI,SACf1C,KAAK,WACLiD,YAAY,wBAEd9J,EAAAC,EAAAC,cAAA,SACEkH,KAAK,cACLlC,MAAOwD,EACPa,SAAUrI,KAAKqI,SACf1C,KAAK,WACLiD,YAAY,4BAEd9J,EAAAC,EAAAC,cAAA,UAAQ6G,SAAU8C,EAAWhD,KAAK,UAAlC,4BAIC+B,GAAS5I,EAAAC,EAAAC,cAAA,SAAI0I,EAAMjF,iBAnDK7D,aAyDlBD,KAAa+P,IC/BbzJ,eACbsJ,EACA3J,EALgB,SAAApD,GAAQ,OAAIA,KAAcA,IAG7ByD,CA1BK,kBAClBnG,EAAAC,EAAAC,cAACuF,EAAgBtF,SAAjB,KACG,SAAAuC,GAAQ,OACP1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,mBAAWwC,EAAS8F,SAApB,KACAxI,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCwC,EAASE,KAEzC5C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAACoK,EAAD,OAEFtK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAC2P,GAAD,YCnBJC,eACJ,SAAAA,EAAY/P,GAAO,IAAAkB,EAAA,OAAAZ,OAAAc,EAAA,EAAAd,CAAAa,KAAA4O,IACjB7O,EAAAZ,OAAAkE,EAAA,EAAAlE,CAAAa,KAAAb,OAAAmE,EAAA,EAAAnE,CAAAyP,GAAArL,KAAAvD,KAAMnB,KAED2E,MAAQ,CACXwI,SAAS,EACTzJ,MAAO,IALQxC,mFASC,IAAAkE,EAAAjE,KAClBA,KAAKqE,SAAS,CAAE2H,SAAS,IAEzBhM,KAAKiM,YAAcjM,KAAKnB,MAAMK,SAASqD,QAAQ6J,WAAW,SAAAyC,GACxD,IAAIpN,EAAO,GAEXoN,EAAcC,KAAKxJ,IAAI,SAAA2H,GACrB,IAAM8B,EAAc,CAAEC,OAAQ/B,EAAEV,GAAI0C,SAAUhC,EAAElL,QAEhD,OADAN,EAAKuD,KAAK+J,GACHtN,IAETwC,EAAKI,SAAS,CAAE9B,MAAOd,EAAMuK,SAAS,qDAKxChM,KAAKiM,+CAGE,IAAAnE,EACoB9H,KAAKwD,MAAxBjB,EADDuF,EACCvF,MAAOyJ,EADRlE,EACQkE,QAEf,OACElN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACCgN,GAAWlN,EAAAC,EAAAC,cAAA,0BACZF,EAAAC,EAAAC,cAAA,UACGuD,EAAM+C,IAAI,SAAA7D,GAAI,OACb3C,EAAAC,EAAAC,cAAA,MAAI+E,IAAKtC,EAAKuN,QACZlQ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBADF,IACwByC,EAAKuN,QAE7BlQ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,yBADF,IAC4ByC,EAAKwN,SAAS9O,OAE1CrB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,2BADF,IAC8ByC,EAAKwN,SAAS3H,UAE5CxI,EAAAC,EAAAC,cAAA,yBAhDSJ,aAkERD,KAAaiQ,IC9Cb3J,eACbsJ,EACA3J,EAJgB,SAAApD,GAAQ,OAAIA,KAAcA,EAASQ,MAAM0E,KAE5CzB,CAjBG,kBAChBnG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,2FAKAF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KAEEpQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KpBbE,SoBakBC,UAAWT,uJCElD,IAAMU,GAAKrI,IAAOsI,GAAVC,MAmCOtM,KA7BH,WACV,OACEpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsQ,GAAD,YACAxQ,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACyQ,EAAD,MACA3Q,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrBrCA,IqBqCsBC,UAAWK,KAC9C5Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrBrCA,UqBqCsBC,UAAWrG,IAC9ClK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrBrCA,UqBqCsBC,UAAWvF,KAC9ChL,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CACEC,OAAK,EACLC,KrBrCmB,aqBsCnBC,UAAWlG,IAEbrK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM3I,EAAa4I,UAAWM,KAC3C7Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrB1CA,WqB0CsBC,UAAWO,KAC9C9Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrBzCF,SqByCsBC,UAAWQ,KAC5C/Q,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KrBxCH,QqBwCsBC,UAAWf,UCpCjCwB,QACW,cAA7B3F,OAAOC,SAAS2F,UAEe,UAA7B5F,OAAOC,SAAS2F,UAEhB5F,OAAOC,SAAS2F,SAASC,MACvB,2DCXNC,IAASC,OACPpR,EAAAC,EAAAC,cAACsL,EAAgB9F,SAAjB,CAA0BR,MAAO,IAAIlE,GACnChB,EAAAC,EAAAC,cAACmR,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5O,KAAK,SAAA6O,GACjCA,EAAaC","file":"static/js/main.10d5d216.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n\r\n    // HELPER\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\r\n    });\r\n\r\n  activeUser = {};\r\n  //  If the user is not null, we will get the database user with the help of the authenticated user’s unique identifier,\r\n  //  and then we merge everything from the database user with the unique identifier and email from the authenticated user.\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        // console.log(authUser);\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n            // console.log(dbUser);\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n            this.activeUser = authUser;\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n\r\n  // *** User API ***\r\n  message = uid => this.db.doc(`messages/${uid}`);\r\n  messages = () => this.db.collection(\"messages\");\r\n\r\n  post = uid => this.db.doc(`posts/${uid}`);\r\n  posts = () => this.db.collection(\"posts\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    // // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const ADMIN = \"/admin\";\r\nexport const ADMIN_DETAILS = \"/admin/id\";\r\nexport const POST = \"/post\";\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          //  If the user is null, it redirects.\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN)\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization); //como higher order function en vanilla JS\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withEmailverification = Component => {\r\n  //Add a function in this file that checks if the\r\n  //authenticated user has a verified email and an\r\n  //email/password sign in on associated with it\r\n  const needsEmailVerification = authUser =>\r\n    authUser &&\r\n    !authUser.emailVerified &&\r\n    authUser.providerData\r\n      .map(provider => provider.providerId)\r\n      .includes(\"password\");\r\n  //If this is true, don’t render the component passed\r\n  //to this higher-order component, but a message that\r\n  //reminds users to verify their email addresses.\r\n\r\n  class withEmailverification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { isSent: false };\r\n    }\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    Se ha enviado un email de confirmación: revisa tus correos\r\n                    incluyendo el Spam. Refresca esta página una vez que hayas\r\n                    confirmado.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Se ha enviado un email de confirmación: revisa tus correos\r\n                    incluyendo el Spam. Puedes reenviarlo si no lo has recibido.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Enviar email de confirmación\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(withEmailverification);\r\n};\r\n\r\nexport default withEmailverification;\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = \"ADMIN\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi Cuenta</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    {/* <li>\r\n      <Link to={ROUTES.POST}>Publicar</Link>\r\n    </li> */}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Bienvenidx</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear Cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormSignUp = styled.form`\r\n  display: flex;\r\n  max-width: 20rem;\r\n  padding: 0.5rem;\r\n  ${props => props.vertical && \"flex-direction: column;\"} > * {\r\n    flex: 1;\r\n\r\n    &:not(:first-child) {\r\n      ${props => (props.vertical ? \"margin-top\" : \"margin-left\")}: 0.5rem;\r\n    }\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    border: 1px solid #b6b6b6;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #ff00cb;\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem;\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n  }\r\n`;\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore MERGE Users\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email,\r\n            roles\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <FormSignUp vertical onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </FormSignUp>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst ErrorParagraph = styled.p`\r\n  color: #ff0000;\r\n`;\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  codeMessageMapper(errorCode) {\r\n    let message = \"\";\r\n    switch (errorCode) {\r\n      case \"auth/invalid-email\":\r\n        message = \"Correo Electrónico inválido\";\r\n        break;\r\n      case \"auth/user-not-found\":\r\n        message = \"Correo Electrónico no registrado\";\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        message = \"Contraseña incorrecta\";\r\n        break;\r\n      case \"auth/email-already-in-use\":\r\n        message = \"Este Correo Electrónico ya está en uso\";\r\n        break;\r\n      case \"auth/weak-password\":\r\n        message = \"La contraseña debe tener al menos 6 caracteres\";\r\n        break;\r\n      default:\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && (\r\n          <ErrorParagraph>{this.codeMessageMapper(error.code)}</ErrorParagraph>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_IN}> Iniciar Sesión </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { SignInLink } from \"../SignIn\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n    <h2>\r\n      O puedes <SignInLink />\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImagePreview = styled.img`\r\n  max-width: 30%;\r\n`;\r\nconst ErrorParagraph = styled.p`\r\n  color: #ff0000;\r\n`;\r\nconst UploadImage = props => {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={props.handleImageChange}\r\n        />\r\n      </form>\r\n      <ImagePreview src={props.imageUrl} />\r\n      <div>\r\n        <ErrorParagraph>{props.error}</ErrorParagraph>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImageFromPost = styled.img`\r\n  max-width: 15rem;\r\n`;\r\n\r\nclass PostItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editMode: false\r\n    };\r\n  }\r\n  render() {\r\n    const { incomingPosts, authorUser } = this.props;\r\n    return (\r\n      <div>\r\n        {incomingPosts &&\r\n          incomingPosts.map(post => (\r\n            <div key={post.uid}>\r\n              <p>\r\n                <strong>ID del post:</strong> {post.uid}\r\n              </p>\r\n              <p>\r\n                <strong>ID del autor:</strong> {post.authorID}\r\n              </p>\r\n              <p>\r\n                <strong>{post.username}</strong> publicó el\r\n                <i> {post.createdAt.toDate().toString()}</i>\r\n              </p>\r\n              <p>\r\n                <i>{post.text}</i>\r\n              </p>\r\n              <ImageFromPost src={post.images.imageUrl} />\r\n              <p />\r\n              {authorUser.uid === post.authorID && <button>Editar</button>}\r\n              <hr />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostItem;\r\n","import React, { Component } from \"react\";\r\nimport PostItem from \"./PostItem\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext } from \"../Session\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass PostsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      incomingPosts: [],\r\n      limit: 5\r\n    };\r\n  }\r\n\r\n  onListenForPosts = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase\r\n      .posts()\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .limit(this.state.limit)\r\n      .onSnapshot(snapshot => {\r\n        if (snapshot.size) {\r\n          let incomingPosts = [];\r\n          snapshot.forEach(doc =>\r\n            incomingPosts.push({ ...doc.data(), uid: doc.id })\r\n          );\r\n\r\n          this.setState({\r\n            incomingPosts: incomingPosts,\r\n            loading: false\r\n          });\r\n        } else {\r\n          this.setState({ incomingPosts: null, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  /// CON MAP EN LUGAR DE FOREACH\r\n  // onListenForPosts = () => {\r\n  //   this.setState({ loading: true });\r\n\r\n  //   this.unsubscribe = this.props.firebase\r\n  //     .posts()\r\n  //     .orderBy(\"createdAt\", \"desc\")\r\n  //     .limit(this.state.limit)\r\n  //     .onSnapshot(querySnapshot => {\r\n  //       if (querySnapshot.size) {\r\n  //         var post = [];\r\n  //         querySnapshot.docs.map(e => {\r\n  //           const postsincome = { postID: e.id, postData: e.data() };\r\n  //           post.push(postsincome);\r\n  //           return post;\r\n  //         });\r\n  //         this.setState({ posts: post, loading: false });\r\n  //       } else {\r\n  //         this.setState({ posts: null, loading: false });\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.onListenForPosts();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  onNextPage = () => {\r\n    this.setState(state => ({ limit: state.limit + 5 }), this.onListenForPosts);\r\n  };\r\n\r\n  render() {\r\n    const { incomingPosts, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authorUser => (\r\n          <div>\r\n            <h2>Posts Recientes</h2>\r\n\r\n            {loading && (\r\n              <div>\r\n                <Loader type=\"CradleLoader\" />\r\n              </div>\r\n            )}\r\n\r\n            {!loading && incomingPosts && (\r\n              <div>\r\n                <PostItem\r\n                  incomingPosts={this.state.incomingPosts}\r\n                  authorUser={authorUser}\r\n                />\r\n                <button type=\"button\" onClick={this.onNextPage}>\r\n                  Más Posts\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {!incomingPosts && <div>No hay posts! aún...</div>}\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PostsList);\r\n","import React, { Component } from \"react\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport PostsList from \"./PostsList\";\r\n// import { getMoment } from \"../Utils\";\r\n// import { AuthUserContext } from \"../Session\";\r\n// import styled from \"styled-components\";\r\n//\r\n\r\nclass PostsBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authorID: \"\",\r\n      images: {},\r\n      isPublic: false,\r\n      error: null,\r\n      text: \"\"\r\n      // username: \"\"\r\n    };\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.createPost = this.createPost.bind(this);\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({\r\n      text: event.target.value,\r\n      // username: this.props.firebase.activeUser.username,\r\n      authorID: this.props.firebase.activeUser.uid\r\n    });\r\n    // console.log(this.state.text);\r\n  };\r\n  onChangeCheckbox = event => {\r\n    this.setState({ isPublic: event.target.checked });\r\n    console.log(\"Public: \" + this.state.isPublic);\r\n  };\r\n\r\n  handleImageChange(e) {\r\n    e.preventDefault();\r\n    const fileTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\r\n    const reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      let extension = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLowerCase();\r\n      const isImage = fileTypes.indexOf(extension) > -1; //&& file.size < 5000\r\n\r\n      const size = file.size < 1048487;\r\n      if (!isImage) {\r\n        this.setState({\r\n          error: \"No es un archivo de imagen\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else if (!size) {\r\n        this.setState({\r\n          error: \"Archivo demasiado grande\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else {\r\n        this.setState({ error: null });\r\n        // console.log(file);\r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            error: null,\r\n            images: { imageName: file.name, imageUrl: reader.result }\r\n          });\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  createPost() {\r\n    this.props.firebase\r\n      .posts()\r\n      .add({\r\n        username: this.props.firebase.activeUser.username,\r\n        createdAt: this.props.firebase.fieldValue.serverTimestamp(),\r\n        ...this.state\r\n      })\r\n      .then(() => {\r\n        console.log(this.state);\r\n        this.setState({\r\n          authorID: \"\",\r\n          images: {},\r\n          isPublic: false,\r\n          error: null,\r\n          text: \"\"\r\n          // username: \"\"\r\n        });\r\n        console.log(\"Document successfully written!\");\r\n        console.log(this.state);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const isInvalid = this.state.error != null || this.state.text === \"\";\r\n\r\n    return (\r\n      <div>\r\n        <h2>\r\n          Hola\r\n          <label> {this.props.firebase.activeUser.username}</label>\r\n        </h2>\r\n        <h3>Comparte tu último descubrimiento:</h3>\r\n        <input type=\"text\" onChange={this.onChangeText} />\r\n        <label>\r\n          Post privado (visible sólo en mi club):\r\n          <input\r\n            name=\"isPublic\"\r\n            type=\"checkbox\"\r\n            checked={this.state.isPublic}\r\n            value={false}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <UploadImage\r\n          handleImageChange={this.handleImageChange}\r\n          imageUrl={this.state.images.imageUrl}\r\n          error={this.state.error}\r\n        />\r\n\r\n        <button\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            this.createPost();\r\n          }}\r\n        >\r\n          Publicar\r\n        </button>\r\n        <PostsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Posts = withFirebase(PostsBase);\r\n\r\nexport default Posts;\r\n","import Posts from \"./Posts\";\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport Posts from \"../Posts\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\n// import Messages from \"../Messages\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n    <Posts />\r\n    {/* <Messages /> */}\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification\r\n} from \"../Session\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.username}!</h2>\r\n        <p>\r\n          <strong>ID USUARIO:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n        {/* {console.log(authUser)} */}\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser;\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AccountPage);\r\n","import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n// import * as ROUTES from \"../../constants/routes\";\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n      var user = [];\r\n\r\n      querySnapshot.docs.map(e => {\r\n        const usersincome = { userID: e.id, userData: e.data() };\r\n        user.push(usersincome);\r\n        return user;\r\n      });\r\n      this.setState({ users: user, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.userID}>\r\n              <span>\r\n                <strong>ID:</strong> {user.userID}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.userData.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.userData.username}\r\n              </span>\r\n              <span>\r\n                {/* <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN_DETAILS}/${user.userID}`,\r\n                    state: { user }\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link> */}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport { UserList } from \"../Users\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n    <p>\r\n      Esta página es visible a todos los usuarios logueados como\r\n      administradores.\r\n    </p>\r\n\r\n    <Switch>\r\n      {/* <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} /> */}\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AdminPage);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\nimport Posts from \"../Posts\";\r\n// import { UserItem } from \"../Users\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n          <Route exact path={ROUTES.POST} component={Posts} />\r\n          {/* <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} /> */}\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}