{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Button/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/SignUp/index.js","components/Landing/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","doc","concat","users","collection","app","initializeApp","fieldValue","firestore","FieldValue","Button","className","extraClassName","onClick","action","name","_ref","components_Button","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","merge","console","log","catch","objectSpread","preventDefault","onChange","defineProperty","target","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Fragment","SignUpForm","SignUpPage","Landing","SignUp_SignUpLink","window","location","href","context","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","version","PasswordChangeForm","PasswordChange","Admin","loading","unsubscribe","onSnapshot","querySnapshot","docs","map","e","usersincome","userID","id","userData","data","Admin_UserList","UserList","H1","styled","h1","_templateObject","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c09b16d0.chunk.js","sourcesContent":["import React from \"react\";\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { authUser: null };\r\n    }\r\n    // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        authUser\r\n          ? this.setState({ authUser })\r\n          : this.setState({ authUser: null });\r\n        // If a user signs out, the authUser object becomes null\r\n        // so the authUser property in the local state is set to null\r\n      });\r\n    }\r\n    // Removes listener if the component unmounts\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          // condition() is executed with the authUser\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n          // If authorization fails,\r\n          //for instance because the authenticated user is null ,\r\n          //the component redirects to the sign in page.\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization);\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\nconst Navigation = () => (\r\n  <nav className=\"main-menu\">\r\n    <AuthUserContext.Consumer>\r\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\r\n      {/* {authUser ? <NavigationAuth /> : <NavigationNonAuth />} */}\r\n    </AuthUserContext.Consumer>\r\n  </nav>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi cuenta</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear una cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\n// {\r\n//   return (\r\n//     <nav className=\"main-menu\">\r\n//       <ul className=\"flex-row\">\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_IN}>Entrar</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_UP}>Registrarse</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.HOME}>Home</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ACCOUNT}>Cuenta</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ADMIN}>Administración</Link>\r\n//         </li>\r\n//         <li>\r\n//           <SignOutButton />\r\n//         </li>\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email\r\n            // roles,\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React from \"react\";\r\nimport { withAuthorization } from \"../Session\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\n// import { auth } from \"firebase\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.email}!</h2>\r\n        <p>\r\n          <strong>ID USUARIO:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// eslint-disable-next-line\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\n// eslint-disable-next-line\r\nimport { compose } from \"recompose\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n      var user = [];\r\n\r\n      querySnapshot.docs.map(e => {\r\n        const usersincome = { userID: e.id, userData: e.data() };\r\n        user.push(usersincome);\r\n        return user;\r\n      });\r\n      this.setState({ users: user, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.userID}>\r\n        <span>\r\n          <strong>ID:</strong> {user.userID}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.userData.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.userData.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(Admin);\r\n\r\n// class AdminPage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       loading: false,\r\n//       users: []\r\n//     };\r\n//   }\r\n// componentDidMount() {\r\n//   this.setState({ loading: true });\r\n\r\n//   this.props.firebase.user().on(\"value\", snapshot => {\r\n//     const usersObject = snapshot.val();\r\n\r\n//     const usersList = Object.keys(usersObject).map(key => ({\r\n//       ...usersObject[key],\r\n//       uid: key\r\n//     }));\r\n\r\n//     this.setState({\r\n//       users: usersList,\r\n//       loading: false\r\n//     });\r\n//   });\r\n// }\r\n\r\n// componentWillUnmount() {\r\n//   this.props.firebase.users().off();\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <AuthUserContext.Consumer>\r\n//         <h1>AdminPage</h1>\r\n//       </AuthUserContext.Consumer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const condition = authUser => !!authUser;\r\n\r\n// const Admin = compose(\r\n//   withFirebase,\r\n//   withAuthorization(condition)\r\n// )(AdminPage);\r\n\r\n// export default Admin;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}