{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Button/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","constants/roles.js","components/SignUp/index.js","components/Landing/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","emailVerified","providerData","db","doc","concat","users","collection","app","initializeApp","fieldValue","firestore","FieldValue","Button","className","extraClassName","onClick","action","name","_ref","components_Button","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","Session_context","Provider","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","ADMIN","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","SignUpFormBase","onSubmit","event","_this$state","ROLES","set","merge","console","log","catch","preventDefault","onChange","defineProperty","target","onChangeCheckbox","checked","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","Fragment","SignUpForm","SignUpPage","Landing","SignUp_SignUpLink","window","location","href","context","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","version","PasswordChangeForm","PasswordChange","Admin","loading","unsubscribe","onSnapshot","querySnapshot","docs","map","e","usersincome","userID","id","userData","Admin_UserList","UserList","H1","styled","h1","_templateObject","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5805afba.chunk.js","sourcesContent":["import React from \"react\";\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Cerrar Sesión\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    // // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // // & the passed function is called every time something changes for the authenticated user\r\n    // componentDidMount() {\r\n    //   this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n    //     authUser\r\n    //       ? this.setState({ authUser })\r\n    //       : this.setState({ authUser: null });\r\n    //     // If a user signs out, the authUser object becomes null\r\n    //     // so the authUser property in the local state is set to null\r\n    //   });\r\n    // }\r\n    // Removes listener if the component unmounts\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN)\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization); //como higher order function en vanilla JS\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\nconst Navigation = () => (\r\n  <nav className=\"main-menu\">\r\n    <AuthUserContext.Consumer>\r\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\r\n      {/* {authUser ? <NavigationAuth /> : <NavigationNonAuth />} */}\r\n    </AuthUserContext.Consumer>\r\n  </nav>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Mi cuenta</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Iniciar Sesión</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Crear una cuenta</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\n// {\r\n//   return (\r\n//     <nav className=\"main-menu\">\r\n//       <ul className=\"flex-row\">\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_IN}>Entrar</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.SIGN_UP}>Registrarse</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.LANDING}>¡Bienvenido!</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.HOME}>Home</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ACCOUNT}>Cuenta</Link>\r\n//         </li>\r\n//         <li>\r\n//           <Link to={ROUTES.ADMIN}>Administración</Link>\r\n//         </li>\r\n//         <li>\r\n//           <SignOutButton />\r\n//         </li>\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\nexport default Navigation;\r\n","export const ADMIN = \"ADMIN\";\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\n// import { FirebaseContext } from '../Firebase';\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1> Registrar Nuevo Usuario </h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email,\r\n            roles\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Nombre Completo</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombre Completo\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Contraseña</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <label>Confirmar Contraseña</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <label>\r\n          Admin:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Crear una Cuenta </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React from \"react\";\r\nimport { FirebaseContext } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\nimport { SignUpLink } from \"../SignUp\";\r\n// const SomeComponent = () => (\r\n\r\n// );\r\nconst Landing = () => (\r\n  <div>\r\n    <h1> Landing </h1>\r\n    <h2>\r\n      Bienvenido a Socialbook, ¿por qué no <SignUpLink />?\r\n    </h2>\r\n\r\n    <Button\r\n      name=\"A Button\"\r\n      action={() => {\r\n        console.log(\"a button\");\r\n        window.location.href = \"https://google.com\";\r\n      }}\r\n    />\r\n    <Button\r\n      name=\"Another Button\"\r\n      action={() => {\r\n        console.log(\"another button\");\r\n      }}\r\n      extraClassName=\"other-btn\"\r\n    />\r\n\r\n    <FirebaseContext.Consumer>\r\n      {firebase => {\r\n        return <div>I ' ve access to Firebase and render something .</div>;\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Resetear Contraseña\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> Olvidé mi contraseña</Link>{\" \"}\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>Iniciar Sesión</h1>\r\n    <SignInForm />\r\n    <p>\r\n      Quiero <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email Registrado</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Constraseña</label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Iniciar Sesión\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React from \"react\";\r\nimport { withAuthorization } from \"../Session\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1> Home </h1>\r\n    <p>La página Home está visible para todos los usuarios logueados</p>\r\n    <p>Currently using React {React.version}</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Cambiar mi Contraseña\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n// import { auth } from \"firebase\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1> Mi Cuenta </h1>\r\n        <h2>Hola: {authUser.email}!</h2>\r\n        <p>\r\n          <strong>ID USUARIO:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>Olvidé mi contraseña:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>Quiero cambiar mi contraseña:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser;\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { compose } from \"recompose\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\n\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n      var user = [];\r\n\r\n      querySnapshot.docs.map(e => {\r\n        const usersincome = { userID: e.id, userData: e.data() };\r\n        user.push(usersincome);\r\n        return user;\r\n      });\r\n      this.setState({ users: user, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.userID}>\r\n        <span>\r\n          <strong>ID:</strong> {user.userID}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.userData.email}\r\n        </span>\r\n        <span>\r\n          <strong>Nombre de Usuario:</strong> {user.userData.username}\r\n        </span>\r\n        <span>\r\n          {/* <strong>Rol:</strong> {user.userData.roles.map(rol => rol.ADMIN)} */}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withFirebase,\r\n  withAuthorization(condition)\r\n)(Admin);\r\n\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n// return compose(\r\n//   withFirebase,\r\n//   withAuthorization(condition)\r\n// )(Admin); //como higher order function en vanilla JS\r\n\r\n// class AdminPage extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       loading: false,\r\n//       users: []\r\n//     };\r\n//   }\r\n// componentDidMount() {\r\n//   this.setState({ loading: true });\r\n\r\n//   this.props.firebase.user().on(\"value\", snapshot => {\r\n//     const usersObject = snapshot.val();\r\n\r\n//     const usersList = Object.keys(usersObject).map(key => ({\r\n//       ...usersObject[key],\r\n//       uid: key\r\n//     }));\r\n\r\n//     this.setState({\r\n//       users: usersList,\r\n//       loading: false\r\n//     });\r\n//   });\r\n// }\r\n\r\n// componentWillUnmount() {\r\n//   this.props.firebase.users().off();\r\n// }\r\n\r\n//   render() {\r\n//     return (\r\n//       <AuthUserContext.Consumer>\r\n//         <h1>AdminPage</h1>\r\n//       </AuthUserContext.Consumer>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const condition = authUser => !!authUser;\r\n\r\n// const Admin = compose(\r\n//   withFirebase,\r\n//   withAuthorization(condition)\r\n// )(AdminPage);\r\n\r\n// export default Admin;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst H1 = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <H1>App</H1>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}