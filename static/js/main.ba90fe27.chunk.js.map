{"version":3,"sources":["components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/Button/index.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Utils/UploadImage.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Landing/index.js","components/Posts/UploadImage.js","components/Posts/CommentItem.js","components/Posts/PostItem.js","components/Posts/PostsList.js","components/Posts/Posts.js","components/Posts/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","activeUser","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","emailVerified","providerData","db","doc","concat","users","collection","message","messages","post","posts","app","initializeApp","fieldValue","firestore","FieldValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAutohorization","condition","withAuthorization","apply","arguments","history","push","compose","withRouter","withEmailverification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","Button","className","extraClassName","action","name","_ref","components_Button","ADMIN","NavigationAuth","react_router_dom","to","ROUTES","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","UploadBtnWrapper","styled","div","_templateObject","UploadBtn","button","_templateObject2","delete","css","_templateObject3","ImagePreview","img","_templateObject4","ErrorParagraph","p","_templateObject5","HiddenInput","input","_templateObject6","FlexDiv","_templateObject7","INITIAL_STATE","error","images","UploadImage","handleImageChange","bind","assertThisInitialized","deleteImage","uploadImage","e","preventDefault","reader","FileReader","file","target","files","extension","split","pop","toLowerCase","isImage","indexOf","size","onloadend","imageName","imageUrl","result","uploadImageToParent","readAsDataURL","buttonLabel","accept","onChange","editMode","src","FormSignUp","form","SignUp_templateObject","vertical","username","isAdmin","passwordOne","passwordTwo","profilePic","SignUpFormBase","onSubmit","event","_this$state","set","merge","console","log","catch","defineProperty","onChangeCheckbox","checked","uploadProfilePic","_this$state2","isInvalid","Utils_UploadImage","placeholder","SignUpLink","Fragment","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignIn_templateObject","SignInFormBase","errorCode","SignIn_ErrorParagraph","codeMessageMapper","code","SignInLink","SignInForm","SignInPage","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","Landing","SignIn_SignInLink","UploadImage_templateObject","UploadImage_templateObject2","UploadImage_templateObject3","UploadImage_templateObject4","UploadImage_templateObject5","UploadImage_templateObject6","UploadImage_templateObject7","UploadImage_FlexDiv","UploadImage_UploadBtnWrapper","UploadImage_UploadBtn","UploadImage_HiddenInput","UploadImage_ImagePreview","UploadImage_ErrorParagraph","authorOfCommentID","authorOfCommentName","text","CommentItem","onChangeComment","commentedAt","Date","commentPost","onPostComment","ImageFromPost","PostItem_templateObject","TextArea","textarea","PostItem_templateObject2","PostItem","onChangeEditText","editText","saveEdit","editPost","cancelEdit","_this3","_this$props","bookIt","deletePost","incomingPosts","cols","rows","aria-required","aria-invalid","Posts_UploadImage","createdAt","toDate","toString","slice","toLocaleString","editedAt","role","aria-label","authorID","comments","comment","idx","Posts_CommentItem","PostsList","onListenForPosts","loading","unsubscribe","orderBy","limit","onSnapshot","forEach","id","postSnapshot","objectWithoutProperties","update","runTransaction","transaction","onNextPage","react_loader_spinner_default","Posts_PostItem","Posts_templateObject","isPublic","PostsBase","onChangeText","createPost","postAuthor","add","auhtUser","Posts_TextArea","Posts_PostsList","Posts","withEmailVerification","components_Posts","PasswordChangeForm","alt","PasswordChange","UserList","querySnapshot","docs","usersincome","userID","userData","react_router","exact","path","component","components_Navigation","LandingPage","HomePage","AccountPage","AdminPage","version","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba90fe27.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null); //Context to pass authUser state to all components interested\r\n\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n\r\n// const FirebaseContext = React.createContext(null); ---> createContext() crea 2 componentes:\r\n// 1. FirebaseContext.Provider: proveerá UNA INSTANCIA SOLO UNA VEZ de Firebase\r\n//     en el nivel más alto del árbol de componentes (ver src/index.js)\r\n// 2. FirebaseContext.Consumer trae la instancia de Firebase creada en el\r\n//     componente que la necesita\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n\r\n    // HELPER\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    // FIREBASE API'S\r\n    this.auth = app.auth(); // *** Instantiate Firebase AUTH ***\r\n    this.db = app.firestore();\r\n  }\r\n  // *** Firebase AUTH API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT\r\n    });\r\n\r\n  activeUser = {};\r\n  //  If the user is not null, we will get the database user with the help of the authenticated user’s unique identifier,\r\n  //  and then we merge everything from the database user with the unique identifier and email from the authenticated user.\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        // console.log(authUser);\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n            // console.log(dbUser);\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n            this.activeUser = authUser;\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n  users = () => this.db.collection(\"users\");\r\n\r\n  // *** User API ***\r\n  message = uid => this.db.doc(`messages/${uid}`);\r\n  messages = () => this.db.collection(\"messages\");\r\n\r\n  post = uid => this.db.doc(`posts/${uid}`);\r\n  posts = () => this.db.collection(\"posts\");\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","// LOGIC FOR SESSION HANDLING\r\nimport React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    // // Listens for authenticated user with onAuthStateChanged from Firebase\r\n    // // onAuthStateChanged receives a function as parameter that has access to the authenticated user\r\n    // // & the passed function is called every time something changes for the authenticated user\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem(\"authUser\");\r\n          this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\nexport const ADMIN = \"/admin\";\r\nexport const ADMIN_DETAILS = \"/admin/id\";\r\nexport const POST = \"/post\";\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAutohorization = condition => Component => {\r\n  class withAuthorization extends React.Component {\r\n    //AUTHORIZATION LOGIC WITH FIREBASE LISTENER,\r\n    //TRIGGERS A CALLBACK FUNCTION (\"condition()\") EVERY TIME THE AUTHENTICATED USER CHANGES\r\n    // condition() is executed with the authUser\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          //  If the user is null, it redirects.\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN)\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        // AuthUserContext shows the Passed Component (page) after the redirection happens\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            // ----> Passed Component (page) that should be protected\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase\r\n  )(withAuthorization); //como higher order function en vanilla JS\r\n};\r\n\r\nexport default withAutohorization;\r\n","import React from \"react\";\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withEmailverification = Component => {\r\n  //Add a function in this file that checks if the\r\n  //authenticated user has a verified email and an\r\n  //email/password sign in on associated with it\r\n  const needsEmailVerification = authUser =>\r\n    authUser &&\r\n    !authUser.emailVerified &&\r\n    authUser.providerData\r\n      .map(provider => provider.providerId)\r\n      .includes(\"password\");\r\n  //If this is true, don’t render the component passed\r\n  //to this higher-order component, but a message that\r\n  //reminds users to verify their email addresses.\r\n\r\n  class withEmailverification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { isSent: false };\r\n    }\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check you E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail. Refresh this page once\r\n                    you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check you E-Mails (Spam folder included)\r\n                    for a confirmation E-Mail or send another confirmation\r\n                    E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(withEmailverification);\r\n};\r\n\r\nexport default withEmailverification;\r\n","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      className={`Button Button-primary ${\r\n        props.extraClassName ? props.extraClassName : ''\r\n      }`}\r\n      onClick={props.action}\r\n    >\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport Button from \"../Button\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <Button name=\"Sign Out\" action={firebase.doSignOut} />\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = \"ADMIN\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst NavigationAuth = ({ authUser }) => (\r\n  <ul>\r\n    {/* <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li> */}\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    {!!authUser.roles[ROLES.ADMIN] && (\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin Page</Link>\r\n      </li>\r\n    )}\r\n    {/* <li>\r\n      <Link to={ROUTES.POST}>Publicar</Link>\r\n    </li> */}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Welcome</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst UploadBtnWrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: inline-block;\r\n`;\r\n\r\nconst UploadBtn = styled.button`\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin: 0.25rem 0.5rem 0.25rem 0;\r\n  padding: 0.25rem 1.25rem;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.delete &&\r\n    css`\r\n      background: gray;\r\n      border: none !important;\r\n      color: white;\r\n    `}\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  max-width: 30%;\r\n`;\r\nconst ErrorParagraph = styled.p`\r\n  color: #ff0000;\r\n`;\r\nconst HiddenInput = styled.input`\r\n  cursor: pointer;\r\n  font-size: 100px;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  opacity: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n`;\r\nconst INITIAL_STATE = {\r\n  error: null,\r\n  images: {}\r\n};\r\nclass UploadImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE\r\n    };\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.deleteImage = this.deleteImage.bind(this);\r\n  }\r\n\r\n  uploadImageToParent() {\r\n    this.props.uploadImage(this.state.images);\r\n  }\r\n\r\n  handleImageChange(e) {\r\n    e.preventDefault();\r\n    const fileTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\r\n    const reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      let extension = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLowerCase();\r\n      const isImage = fileTypes.indexOf(extension) > -1;\r\n\r\n      const size = file.size < 1048487;\r\n      if (!isImage) {\r\n        this.setState({\r\n          error: \"Sorry, the file is not an image\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else if (!size) {\r\n        this.setState({\r\n          error: \"Sorry, the file is too big\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else {\r\n        this.setState({ error: null });\r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            error: null,\r\n            images: { imageName: file.name, imageUrl: reader.result }\r\n          });\r\n          this.uploadImageToParent();\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteImage() {\r\n    this.setState({ images: {} });\r\n    this.uploadImageToParent();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FlexDiv>\r\n          <UploadBtnWrapper>\r\n            <UploadBtn>{this.props.buttonLabel}</UploadBtn>\r\n            <HiddenInput\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={this.handleImageChange}\r\n            />\r\n          </UploadBtnWrapper>\r\n          {this.props.editMode && (\r\n            <UploadBtn delete onClick={this.deleteImage}>\r\n              Delete Image\r\n            </UploadBtn>\r\n          )}\r\n        </FlexDiv>\r\n        <div>\r\n          <ImagePreview src={this.props.imageUrl} />\r\n        </div>\r\n        <div>\r\n          <ErrorParagraph>{this.state.error}</ErrorParagraph>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport UploadImage from \"../Utils/UploadImage\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormSignUp = styled.form`\r\n  display: flex;\r\n  max-width: 20rem;\r\n  padding: 0.5rem;\r\n  ${props => props.vertical && \"flex-direction: column;\"} > * {\r\n    flex: 1;\r\n\r\n    &:not(:first-child) {\r\n      ${props => (props.vertical ? \"margin-top\" : \"margin-left\")}: 0.5rem;\r\n    }\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    border: 1px solid #b6b6b6;\r\n  }\r\n\r\n  input::placeholder {\r\n    color: #ff00cb;\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem;\r\n    border-radius: 0.5rem;\r\n    border: none;\r\n  }\r\n`;\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h2>Sign Up </h2>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\n// INITIAL_STATE Captures User Information\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  error: null,\r\n  isAdmin: false,\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  profilePic: {\r\n    imageName: \"\",\r\n    imageUrl:\r\n      \"https://claudiagarfias.works/laboratoria/visitors/assets/kisspng-computer-icons.png\"\r\n  }\r\n};\r\n\r\n// SignUpForm Manages the FORM STATE in React's local state\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE }; // ... is SPREAD OPERATOR, here is like a PUSH METHOD\r\n    this.uploadProfilePic = this.uploadProfilePic.bind(this);\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin, profilePic } = this.state;\r\n    const roles = {};\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in Firestore MERGE Users\r\n        return this.props.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email,\r\n            profilePic,\r\n            roles\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        console.log(\"Document successfully written!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME); // Pushes the route to the history object\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  uploadProfilePic(img) {\r\n    this.setState({ profilePic: img });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <FormSignUp vertical onSubmit={this.onSubmit} className=\"sign-up-form\">\r\n        {/* INPUTS get value from local state & updates it with a onChange handler */}\r\n        <label>Profile Picture</label>\r\n        <UploadImage\r\n          uploadImage={this.uploadProfilePic}\r\n          buttonLabel={\"Upload Image\"}\r\n          imageUrl={this.state.profilePic.imageUrl}\r\n        />\r\n        <label>User Name</label>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"User Name\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <label>Confirm Password</label>\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar Contraseña\"\r\n        />\r\n        <label>\r\n          I am an administrator user:\r\n          <input\r\n            name=\"isAdmin\"\r\n            type=\"checkbox\"\r\n            checked={isAdmin}\r\n            onChange={this.onChangeCheckbox}\r\n          />\r\n        </label>\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </FormSignUp>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_UP}> Sign Up </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst PasswordForgetPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>PasswordForget</h1>\r\n      <PasswordForgetForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.PASSWORD_FORGET}> I forgot my Password</Link>\r\n  </React.Fragment>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst ErrorParagraph = styled.p`\r\n  color: #ff0000;\r\n`;\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h2>Sign In</h2>\r\n    <SignInForm />\r\n    <p>\r\n      I would like to <SignUpLink />\r\n    </p>\r\n    <p>\r\n      <PasswordForgetLink />\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  codeMessageMapper(errorCode) {\r\n    let message = \"\";\r\n    switch (errorCode) {\r\n      case \"auth/invalid-email\":\r\n        message = \"Invalid Email\";\r\n        break;\r\n      case \"auth/user-not-found\":\r\n        message = \"User not found\";\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        message = \"Wrong Pasword\";\r\n        break;\r\n      case \"auth/email-already-in-use\":\r\n        message = \"Email already in use\";\r\n        break;\r\n      case \"auth/weak-password\":\r\n        message = \"Password must have at least 6 characters\";\r\n        break;\r\n      default:\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>Email: </label>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <label> Password: </label>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && (\r\n          <ErrorParagraph>{this.codeMessageMapper(error.code)}</ErrorParagraph>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInLink = () => (\r\n  <React.Fragment>\r\n    <Link to={ROUTES.SIGN_IN}> Sign In </Link>\r\n  </React.Fragment>\r\n);\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInLink };\r\n","import React from \"react\";\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport { SignInLink } from \"../SignIn\";\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <h2>\r\n      Welcome to Socialbook, ¿Would you like to <SignUpLink />?\r\n    </h2>\r\n    <h2>\r\n      Or <SignInLink />\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst UploadBtnWrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: inline-block;\r\n`;\r\n\r\nconst UploadBtn = styled.button`\r\n  background-color: white;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin: 0.25rem 0.5rem 0.25rem 0;\r\n  padding: 0.25rem 1.25rem;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.delete &&\r\n    css`\r\n      background: gray;\r\n      border: none !important;\r\n      color: white;\r\n    `}\r\n`;\r\n\r\nconst ImagePreview = styled.img`\r\n  max-width: 30%;\r\n`;\r\nconst ErrorParagraph = styled.p`\r\n  color: #ff0000;\r\n`;\r\nconst HiddenInput = styled.input`\r\n  cursor: pointer;\r\n  font-size: 100px;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  opacity: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n`;\r\nconst INITIAL_STATE = {\r\n  error: null,\r\n  images: {}\r\n};\r\nclass UploadImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE\r\n    };\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.deleteImage = this.deleteImage.bind(this);\r\n  }\r\n\r\n  uploadImageToParent() {\r\n    this.props.uploadImage(this.state.images);\r\n  }\r\n\r\n  handleImageChange(e) {\r\n    e.preventDefault();\r\n    const fileTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\r\n    const reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      let extension = file.name\r\n        .split(\".\")\r\n        .pop()\r\n        .toLowerCase();\r\n      const isImage = fileTypes.indexOf(extension) > -1;\r\n\r\n      const size = file.size < 1048487;\r\n      if (!isImage) {\r\n        this.setState({\r\n          error: \"Sorry, the file is not an image\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else if (!size) {\r\n        this.setState({\r\n          error: \"Sorry, the file is too big\",\r\n          images: { imageUrl: \"\" }\r\n        });\r\n      } else {\r\n        this.setState({ error: null });\r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            error: null,\r\n            images: { imageName: file.name, imageUrl: reader.result }\r\n          });\r\n          this.uploadImageToParent();\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteImage() {\r\n    this.setState({ images: {} });\r\n    this.uploadImageToParent();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FlexDiv>\r\n          <UploadBtnWrapper>\r\n            <UploadBtn>{this.props.buttonLabel}</UploadBtn>\r\n            <HiddenInput\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={this.handleImageChange}\r\n            />\r\n          </UploadBtnWrapper>\r\n          {this.props.editMode && (\r\n            <UploadBtn delete onClick={this.deleteImage}>\r\n              Delete Image\r\n            </UploadBtn>\r\n          )}\r\n        </FlexDiv>\r\n        <div>\r\n          <ImagePreview src={this.props.imageUrl} />\r\n        </div>\r\n        <div>\r\n          <ErrorParagraph>{this.state.error}</ErrorParagraph>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadImage;\r\n","import React, { Component } from \"react\";\r\nconst INITIAL_STATE = {\r\n  authorOfCommentID: \"\",\r\n  authorOfCommentName: \"\",\r\n  text: \"\"\r\n};\r\nclass CommentItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n    this.onChangeComment = this.onChangeComment.bind(this);\r\n  }\r\n  onChangeComment(event) {\r\n    this.setState({\r\n      authorOfCommentID: this.props.authUser.uid,\r\n      authorOfCommentName: this.props.authUser.username,\r\n      commentedAt: new Date(),\r\n      text: event.target.value\r\n    });\r\n    console.log(this.state);\r\n  }\r\n  onPostComment(post) {\r\n    this.props.commentPost(post, this.state);\r\n    this.setState({\r\n      ...INITIAL_STATE\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <article>\r\n        What do you think?\r\n        <input onChange={this.onChangeComment} value={this.state.text} />\r\n        <button\r\n          onClick={() => {\r\n            this.onPostComment(this.props.post);\r\n          }}\r\n        >\r\n          Comment\r\n        </button>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentItem;\r\n","import React, { Component } from \"react\";\r\nimport UploadImage from \"./UploadImage\";\r\nimport CommentItem from \"./CommentItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImageFromPost = styled.img`\r\n  max-width: 15rem;\r\n`;\r\nconst TextArea = styled.textarea`\r\n  background-color: #fff !important;\r\n  border: 1px solid #b6b6b6;\r\n  -moz-border-radius: 1px solid #b6b6b6\r\n  -webkit-border-radius:1px solid #b6b6b6\r\n  border-radius: 5px;\r\n  font-family: Open Sans, Arial, sans-serif;\r\n  font-size: 15px;\r\n  color: #404b56 !important;\r\n  padding: 16px !important;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nclass PostItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.post.text,\r\n      error: null,\r\n      images: this.props.post.images\r\n    };\r\n    // this.handleImageEdit = this.handleImageEdit.bind(this);\r\n    this.uploadImage = this.uploadImage.bind(this);\r\n    this.editPost = this.editPost.bind(this);\r\n    this.cancelEdit = this.cancelEdit.bind(this);\r\n    // this.deleteImage = this.deleteImage.bind(this);\r\n  }\r\n  editPost() {\r\n    this.setState({ editMode: true });\r\n  }\r\n  cancelEdit() {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.post.text\r\n    }));\r\n  }\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  uploadImage(images) {\r\n    this.setState({ images: images });\r\n  }\r\n\r\n  // deleteImage() {\r\n  //   this.setState({ images: {} });\r\n  // }\r\n\r\n  saveEdit = () => {\r\n    this.props.editPost(\r\n      this.props.post,\r\n      this.state.images,\r\n      this.state.editText\r\n    );\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      authUser,\r\n      bookIt,\r\n      deletePost,\r\n      incomingPosts,\r\n      post,\r\n      commentPost\r\n    } = this.props;\r\n    const { editMode, editText } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {editMode ? (\r\n          <div>\r\n            <TextArea\r\n              type=\"text\"\r\n              value={editText}\r\n              onChange={this.onChangeEditText}\r\n              cols={\"40\"}\r\n              rows={\"6\"}\r\n              aria-required={true}\r\n              aria-invalid={false}\r\n            />\r\n            {post.images.imageUrl && (\r\n              <React.Fragment>\r\n                <UploadImage\r\n                  uploadImage={this.uploadImage}\r\n                  buttonLabel={\"Change Image\"}\r\n                  editMode={this.state.editMode}\r\n                  deleteImage={this.deleteImage}\r\n                  imageUrl={this.state.images.imageUrl}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n\r\n            {!post.images.imageUrl && (\r\n              <React.Fragment>\r\n                <UploadImage\r\n                  uploadImage={this.uploadImage}\r\n                  buttonLabel={\"Upload Image\"}\r\n                  editMode={this.state.editMode}\r\n                  deleteImage={this.deleteImage}\r\n                  imageUrl={this.state.images.imageUrl}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n\r\n            <button\r\n              onClick={() => {\r\n                console.log(this.state);\r\n                this.saveEdit();\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n            <button onClick={this.cancelEdit}>Cancel</button>\r\n            <hr />\r\n          </div>\r\n        ) : (\r\n          incomingPosts && (\r\n            <div>\r\n              <p>\r\n                <strong>{post.username}</strong> shared on{\" \"}\r\n                <i>\r\n                  {post.createdAt\r\n                    .toDate()\r\n                    .toString()\r\n                    .slice(0, 10)}{\" \"}\r\n                </i>\r\n                at\r\n                <i>\r\n                  {post.createdAt\r\n                    .toDate()\r\n                    .toLocaleString()\r\n                    .slice(-9, -1)}\r\n                </i>\r\n                :\r\n              </p>\r\n              <p>\r\n                <i>{post.text} </i>\r\n              </p>\r\n              <ImageFromPost src={post.images.imageUrl} />\r\n              <p />\r\n              {post.editedAt && <i>(Edited)</i>}\r\n              <p>\r\n                <span role=\"img\" aria-label=\"Books\">\r\n                  📚\r\n                </span>{\" \"}\r\n                Bookits: {post.bookIt}\r\n              </p>\r\n              <button onClick={() => bookIt(post)}>\r\n                I{\" \"}\r\n                <span role=\"img\" aria-label=\"Book\">\r\n                  📖\r\n                </span>{\" \"}\r\n                it!\r\n              </button>\r\n              {authUser.uid === post.authorID && (\r\n                <div>\r\n                  <button onClick={this.editPost}>Edit Post</button>\r\n                  <button onClick={() => deletePost(post)}>Delete Post</button>\r\n                </div>\r\n              )}\r\n\r\n              {post.comments && (\r\n                <article>\r\n                  <p>Comments:</p>\r\n                  <div>\r\n                    {post.comments.map((comment, idx) => (\r\n                      <div key={idx}>\r\n                        <p>\r\n                          {comment.authorOfCommentName} commented:\r\n                          <i> {comment.text}</i>\r\n                        </p>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </article>\r\n              )}\r\n              <CommentItem\r\n                authUser={authUser}\r\n                post={post}\r\n                commentPost={commentPost}\r\n              />\r\n              <hr />\r\n            </div>\r\n          )\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostItem;\r\n","import React, { Component } from \"react\";\r\nimport PostItem from \"./PostItem\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext } from \"../Session\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass PostsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      incomingPosts: [],\r\n      limit: 5\r\n    };\r\n  }\r\n\r\n  onListenForPosts = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase\r\n      .posts()\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .limit(this.state.limit)\r\n      .onSnapshot(snapshot => {\r\n        if (snapshot.size) {\r\n          let incomingPosts = [];\r\n          snapshot.forEach(doc =>\r\n            incomingPosts.push({ ...doc.data(), uid: doc.id })\r\n          );\r\n\r\n          this.setState({\r\n            incomingPosts: incomingPosts,\r\n            loading: false\r\n          });\r\n        } else {\r\n          this.setState({ incomingPosts: null, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  editPost = (post, images, text) => {\r\n    const { uid, ...postSnapshot } = post;\r\n\r\n    this.props.firebase.post(post.uid).update({\r\n      ...postSnapshot,\r\n      editedAt: new Date(),\r\n      images,\r\n      text\r\n    });\r\n  };\r\n\r\n  bookIt = post => {\r\n    this.props.firebase\r\n      .post(post.uid)\r\n      .set(\r\n        {\r\n          bookIt: post.bookIt + 1\r\n        },\r\n        { merge: true }\r\n      )\r\n\r\n      .catch(function(error) {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  commentPost = (post, comment) => {\r\n    this.props.firebase.db\r\n      .runTransaction(transaction => {\r\n        // This code may get re-run multiple times if there are conflicts.\r\n        return transaction.get(this.props.firebase.post(post.uid)).then(doc => {\r\n          if (!doc.data().comments) {\r\n            transaction.set({\r\n              comments: [comment]\r\n            });\r\n          } else {\r\n            const comments = doc.data().comments;\r\n            comments.push(comment);\r\n            transaction.update(this.props.firebase.post(post.uid), {\r\n              comments: comments\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .then(function() {\r\n        console.log(\"Transaction successfully committed!\");\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Transaction failed: \", error);\r\n      });\r\n  };\r\n\r\n  deletePost = post => {\r\n    this.props.firebase\r\n      .post(post.uid)\r\n      .delete()\r\n      .then(function() {\r\n        console.log(\"Document successfully deleted!\");\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onListenForPosts();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  onNextPage = () => {\r\n    this.setState(state => ({ limit: state.limit + 5 }), this.onListenForPosts);\r\n  };\r\n\r\n  render() {\r\n    const { incomingPosts, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            <h2>Recent Posts</h2>\r\n\r\n            {loading && (\r\n              <div>\r\n                <Loader type=\"CradleLoader\" />\r\n              </div>\r\n            )}\r\n\r\n            {!loading && incomingPosts && (\r\n              <div>\r\n                {this.state.incomingPosts.map(post => (\r\n                  <PostItem\r\n                    authUser={authUser}\r\n                    bookIt={this.bookIt}\r\n                    commentPost={this.commentPost}\r\n                    deletePost={this.deletePost}\r\n                    editPost={this.editPost}\r\n                    incomingPosts={this.state.incomingPosts}\r\n                    post={post}\r\n                    key={post.uid}\r\n                  />\r\n                ))}\r\n\r\n                <button type=\"button\" onClick={this.onNextPage}>\r\n                  More Posts\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {!incomingPosts && <div>Sorry, there are no posts... yet.</div>}\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PostsList);\r\n","import React, { Component } from \"react\";\r\nimport UploadImage from \"../Utils/UploadImage\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport PostsList from \"./PostsList\";\r\nimport { AuthUserContext } from \"../Session\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextArea = styled.textarea`\r\n  background-color: #fff !important;\r\n  border: 1px solid #b6b6b6;\r\n  width: 50% !important;\r\n  -moz-border-radius: 1px solid #b6b6b6\r\n  -webkit-border-radius:1px solid #b6b6b6\r\n  border-radius: 5px;\r\n  font-family: Open Sans, Arial, sans-serif;\r\n  font-size: 15px;\r\n  color: #404b56 !important;\r\n  padding: 16px !important;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst INITIAL_STATE = {\r\n  authorID: \"\",\r\n  bookIt: 0,\r\n  comments: [],\r\n  error: null,\r\n  images: {\r\n    imageName: \"\",\r\n    imageUrl: \"\"\r\n  },\r\n  isPublic: false,\r\n  text: \"\"\r\n};\r\nclass PostsBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE\r\n    };\r\n    this.createPost = this.createPost.bind(this);\r\n    this.uploadImage = this.uploadImage.bind(this);\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({\r\n      authorID: this.props.firebase.activeUser.uid,\r\n      text: event.target.value\r\n    });\r\n  };\r\n  onChangeCheckbox = event => {\r\n    this.setState({ isPublic: event.target.checked });\r\n    console.log(\"Public: \" + this.state.isPublic);\r\n  };\r\n\r\n  uploadImage(images) {\r\n    this.setState({ images: images });\r\n  }\r\n\r\n  createPost(postAuthor) {\r\n    this.props.firebase\r\n      .posts()\r\n      .add({\r\n        username: postAuthor,\r\n        createdAt: new Date(),\r\n        ...this.state\r\n      })\r\n      .then(() => {\r\n        console.log(this.state);\r\n        this.setState({ ...INITIAL_STATE });\r\n        console.log(\"Document successfully written!\");\r\n        console.log(this.state);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const isInvalid = this.state.error != null || this.state.text === \"\";\r\n\r\n    return (\r\n      <div>\r\n        <AuthUserContext.Consumer>\r\n          {auhtUser => (\r\n            <h2>\r\n              Hello\r\n              <label> {auhtUser.username}!</label>\r\n            </h2>\r\n          )}\r\n        </AuthUserContext.Consumer>\r\n        <h3>What are you reading?</h3>\r\n        <TextArea\r\n          type=\"text\"\r\n          onChange={this.onChangeText}\r\n          value={this.state.text}\r\n          rows={\"10\"}\r\n          aria-required={true}\r\n          aria-invalid={false}\r\n        />\r\n        <div>\r\n          <label>\r\n            <input\r\n              name=\"isPublic\"\r\n              type=\"checkbox\"\r\n              checked={this.state.isPublic}\r\n              value={false}\r\n              onChange={this.onChangeCheckbox}\r\n            />\r\n            Private (visible only in my club):\r\n          </label>\r\n        </div>\r\n\r\n        <UploadImage\r\n          uploadImage={this.uploadImage}\r\n          buttonLabel={\"Upload Image\"}\r\n          imageUrl={this.state.images.imageUrl}\r\n        />\r\n        <AuthUserContext.Consumer>\r\n          {authUser => (\r\n            <React.Fragment>\r\n              <button\r\n                disabled={isInvalid}\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  this.createPost(authUser.username);\r\n                }}\r\n              >\r\n                Share\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ ...INITIAL_STATE });\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </React.Fragment>\r\n          )}\r\n        </AuthUserContext.Consumer>\r\n        <PostsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Posts = withFirebase(PostsBase);\r\n\r\nexport default Posts;\r\n","import Posts from \"./Posts\";\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport Posts from \"../Posts\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\n// import Messages from \"../Messages\";\r\n\r\nconst HomePage = () => (\r\n  <main>\r\n    <Posts />\r\n  </main>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirmar contraseña\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { PasswordForgetForm } from \"../PasswordForget\";\r\nimport PasswordChangeForm from \"../PasswordChange\";\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification\r\n} from \"../Session\";\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h2>Account belongs to {authUser.username}.</h2>\r\n        <img src={authUser.profilePic.imageUrl} alt=\"Profile\" />\r\n        <p>\r\n          <strong>USER ID:</strong> {authUser.uid}\r\n        </p>\r\n        <div>\r\n          <h3>I forgot my Password:</h3>\r\n          <PasswordForgetForm />\r\n        </div>\r\n        <div>\r\n          <h3>I want to reset my Password:</h3>\r\n          <PasswordChangeForm />\r\n        </div>\r\n        {/* {console.log(authUser)} */}\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser;\r\n// const condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AccountPage);\r\n","import React, { Component } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n// import * as ROUTES from \"../../constants/routes\";\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.unsubscribe = this.props.firebase.users().onSnapshot(querySnapshot => {\r\n      var user = [];\r\n\r\n      querySnapshot.docs.map(e => {\r\n        const usersincome = { userID: e.id, userData: e.data() };\r\n        user.push(usersincome);\r\n        return user;\r\n      });\r\n      this.setState({ users: user, loading: false });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.userID}>\r\n              <span>\r\n                <strong>ID:</strong> {user.userID}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.userData.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.userData.username}\r\n              </span>\r\n              <span>\r\n                {/* <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN_DETAILS}/${user.userID}`,\r\n                    state: { user }\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link> */}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport { UserList } from \"../Users\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n    <p>\r\n      Esta página es visible a todos los usuarios logueados como\r\n      administradores.\r\n    </p>\r\n\r\n    <Switch>\r\n      {/* <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} /> */}\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(AdminPage);\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport HomePage from \"../Home\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\n// import { withFirebase } from '../Firebase';\r\n// import { AuthUserContext } from '../Session';\r\n\r\nimport Posts from \"../Posts\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          {/* Navigation uses AuthContext to consume the authenticated user*/}\r\n          <Navigation />\r\n          <hr />\r\n          <h1>Socialbook: Read {\"&\"} Share</h1>\r\n\r\n          <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n          <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n          <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n          <Route\r\n            exact\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={PasswordForgetPage}\r\n          />\r\n          <Route exact path={ROUTES.HOME} component={HomePage} />\r\n          <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n          <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n          <Route exact path={ROUTES.POST} component={Posts} />\r\n        </div>\r\n      </Router>\r\n      <p>Currently using React {React.version}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}